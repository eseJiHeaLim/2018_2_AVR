
week6_HW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  0000134a  000013be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000134a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 000001a0  00000000  00000000  000014c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000226  00000000  00000000  00001666  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000252f  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000012ae  00000000  00000000  00003dbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001523  00000000  00000000  00005069  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001f0  00000000  00000000  0000658c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000036a  00000000  00000000  0000677c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000100c  00000000  00000000  00006ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000108  00000000  00000000  00007af2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e4       	ldi	r30, 0x4A	; 74
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 3c 03 	call	0x678	; 0x678 <main>
      8e:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <led_all_onoff>:
#include<util/delay.h>

// 모든 led on, off 반복 
// n = 반복횟수 , t = 반복 주기 
void led_all_onoff(int n, int t)
{
      96:	2f 92       	push	r2
      98:	3f 92       	push	r3
      9a:	4f 92       	push	r4
      9c:	5f 92       	push	r5
      9e:	6f 92       	push	r6
      a0:	7f 92       	push	r7
      a2:	8f 92       	push	r8
      a4:	9f 92       	push	r9
      a6:	af 92       	push	r10
      a8:	bf 92       	push	r11
      aa:	cf 92       	push	r12
      ac:	df 92       	push	r13
      ae:	ef 92       	push	r14
      b0:	ff 92       	push	r15
      b2:	0f 93       	push	r16
      b4:	1f 93       	push	r17
      b6:	cf 93       	push	r28
      b8:	df 93       	push	r29
      ba:	2c 01       	movw	r4, r24
      bc:	c0 e0       	ldi	r28, 0x00	; 0
      be:	d0 e0       	ldi	r29, 0x00	; 0
	int i =0;
	for (i=0; i<n;i++)
	{
		PORTD=0x0F;
		PORTB=0xF0;
		_delay_ms(t);
      c0:	3b 01       	movw	r6, r22
      c2:	88 24       	eor	r8, r8
      c4:	77 fc       	sbrc	r7, 7
      c6:	80 94       	com	r8
      c8:	98 2c       	mov	r9, r8
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      ca:	80 e9       	ldi	r24, 0x90	; 144
      cc:	28 2e       	mov	r2, r24
      ce:	81 e0       	ldi	r24, 0x01	; 1
      d0:	38 2e       	mov	r3, r24
      d2:	79 c0       	rjmp	.+242    	; 0x1c6 <led_all_onoff+0x130>
void led_all_onoff(int n, int t)
{
	int i =0;
	for (i=0; i<n;i++)
	{
		PORTD=0x0F;
      d4:	8f e0       	ldi	r24, 0x0F	; 15
      d6:	8b b9       	out	0x0b, r24	; 11
		PORTB=0xF0;
      d8:	80 ef       	ldi	r24, 0xF0	; 240
      da:	85 b9       	out	0x05, r24	; 5
		_delay_ms(t);
      dc:	c4 01       	movw	r24, r8
      de:	b3 01       	movw	r22, r6
      e0:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__floatsisf>
      e4:	5b 01       	movw	r10, r22
      e6:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      e8:	20 e0       	ldi	r18, 0x00	; 0
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	4a e7       	ldi	r20, 0x7A	; 122
      ee:	55 e4       	ldi	r21, 0x45	; 69
      f0:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
      f4:	7b 01       	movw	r14, r22
      f6:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 e8       	ldi	r20, 0x80	; 128
      fe:	5f e3       	ldi	r21, 0x3F	; 63
     100:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     104:	88 23       	and	r24, r24
     106:	1c f4       	brge	.+6      	; 0x10e <led_all_onoff+0x78>
     108:	61 e0       	ldi	r22, 0x01	; 1
     10a:	70 e0       	ldi	r23, 0x00	; 0
     10c:	22 c0       	rjmp	.+68     	; 0x152 <led_all_onoff+0xbc>
		__ticks = 1;
	else if (__tmp > 65535)
     10e:	c8 01       	movw	r24, r16
     110:	b7 01       	movw	r22, r14
     112:	20 e0       	ldi	r18, 0x00	; 0
     114:	3f ef       	ldi	r19, 0xFF	; 255
     116:	4f e7       	ldi	r20, 0x7F	; 127
     118:	57 e4       	ldi	r21, 0x47	; 71
     11a:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     11e:	18 16       	cp	r1, r24
     120:	a4 f4       	brge	.+40     	; 0x14a <led_all_onoff+0xb4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     122:	c6 01       	movw	r24, r12
     124:	b5 01       	movw	r22, r10
     126:	20 e0       	ldi	r18, 0x00	; 0
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	40 e2       	ldi	r20, 0x20	; 32
     12c:	51 e4       	ldi	r21, 0x41	; 65
     12e:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     132:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     136:	05 c0       	rjmp	.+10     	; 0x142 <led_all_onoff+0xac>
     138:	c1 01       	movw	r24, r2
     13a:	01 97       	sbiw	r24, 0x01	; 1
     13c:	f1 f7       	brne	.-4      	; 0x13a <led_all_onoff+0xa4>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     13e:	61 50       	subi	r22, 0x01	; 1
     140:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     142:	61 15       	cp	r22, r1
     144:	71 05       	cpc	r23, r1
     146:	c1 f7       	brne	.-16     	; 0x138 <led_all_onoff+0xa2>
     148:	07 c0       	rjmp	.+14     	; 0x158 <led_all_onoff+0xc2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     14a:	c8 01       	movw	r24, r16
     14c:	b7 01       	movw	r22, r14
     14e:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     152:	cb 01       	movw	r24, r22
     154:	01 97       	sbiw	r24, 0x01	; 1
     156:	f1 f7       	brne	.-4      	; 0x154 <led_all_onoff+0xbe>
		PORTD=0xF0;
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	8b b9       	out	0x0b, r24	; 11
		PORTB=0x0F;
     15c:	8f e0       	ldi	r24, 0x0F	; 15
     15e:	85 b9       	out	0x05, r24	; 5
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     160:	c8 01       	movw	r24, r16
     162:	b7 01       	movw	r22, r14
     164:	20 e0       	ldi	r18, 0x00	; 0
     166:	30 e0       	ldi	r19, 0x00	; 0
     168:	40 e8       	ldi	r20, 0x80	; 128
     16a:	5f e3       	ldi	r21, 0x3F	; 63
     16c:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     170:	88 23       	and	r24, r24
     172:	1c f4       	brge	.+6      	; 0x17a <led_all_onoff+0xe4>
     174:	61 e0       	ldi	r22, 0x01	; 1
     176:	70 e0       	ldi	r23, 0x00	; 0
     178:	22 c0       	rjmp	.+68     	; 0x1be <led_all_onoff+0x128>
		__ticks = 1;
	else if (__tmp > 65535)
     17a:	c8 01       	movw	r24, r16
     17c:	b7 01       	movw	r22, r14
     17e:	20 e0       	ldi	r18, 0x00	; 0
     180:	3f ef       	ldi	r19, 0xFF	; 255
     182:	4f e7       	ldi	r20, 0x7F	; 127
     184:	57 e4       	ldi	r21, 0x47	; 71
     186:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     18a:	18 16       	cp	r1, r24
     18c:	a4 f4       	brge	.+40     	; 0x1b6 <led_all_onoff+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     18e:	c6 01       	movw	r24, r12
     190:	b5 01       	movw	r22, r10
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	40 e2       	ldi	r20, 0x20	; 32
     198:	51 e4       	ldi	r21, 0x41	; 65
     19a:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     19e:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     1a2:	05 c0       	rjmp	.+10     	; 0x1ae <led_all_onoff+0x118>
     1a4:	c1 01       	movw	r24, r2
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <led_all_onoff+0x110>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1aa:	61 50       	subi	r22, 0x01	; 1
     1ac:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ae:	61 15       	cp	r22, r1
     1b0:	71 05       	cpc	r23, r1
     1b2:	c1 f7       	brne	.-16     	; 0x1a4 <led_all_onoff+0x10e>
     1b4:	07 c0       	rjmp	.+14     	; 0x1c4 <led_all_onoff+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1b6:	c8 01       	movw	r24, r16
     1b8:	b7 01       	movw	r22, r14
     1ba:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     1be:	cb 01       	movw	r24, r22
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <led_all_onoff+0x12a>
// 모든 led on, off 반복 
// n = 반복횟수 , t = 반복 주기 
void led_all_onoff(int n, int t)
{
	int i =0;
	for (i=0; i<n;i++)
     1c4:	21 96       	adiw	r28, 0x01	; 1
     1c6:	c4 15       	cp	r28, r4
     1c8:	d5 05       	cpc	r29, r5
     1ca:	0c f4       	brge	.+2      	; 0x1ce <led_all_onoff+0x138>
     1cc:	83 cf       	rjmp	.-250    	; 0xd4 <led_all_onoff+0x3e>
		_delay_ms(t);
		PORTD=0xF0;
		PORTB=0x0F;
		_delay_ms(t);
	}
}
     1ce:	df 91       	pop	r29
     1d0:	cf 91       	pop	r28
     1d2:	1f 91       	pop	r17
     1d4:	0f 91       	pop	r16
     1d6:	ff 90       	pop	r15
     1d8:	ef 90       	pop	r14
     1da:	df 90       	pop	r13
     1dc:	cf 90       	pop	r12
     1de:	bf 90       	pop	r11
     1e0:	af 90       	pop	r10
     1e2:	9f 90       	pop	r9
     1e4:	8f 90       	pop	r8
     1e6:	7f 90       	pop	r7
     1e8:	6f 90       	pop	r6
     1ea:	5f 90       	pop	r5
     1ec:	4f 90       	pop	r4
     1ee:	3f 90       	pop	r3
     1f0:	2f 90       	pop	r2
     1f2:	08 95       	ret

000001f4 <led_alternating_onoff>:

//display을 입력한 대로 t의 주기를 가지며 n번을 반복한다.
//display : 16진수 입력(입력의1은 켜지는것을 의미 )
void led_alternating_onoff(int display , int n , int t)
{
     1f4:	2f 92       	push	r2
     1f6:	3f 92       	push	r3
     1f8:	4f 92       	push	r4
     1fa:	5f 92       	push	r5
     1fc:	6f 92       	push	r6
     1fe:	7f 92       	push	r7
     200:	8f 92       	push	r8
     202:	9f 92       	push	r9
     204:	af 92       	push	r10
     206:	bf 92       	push	r11
     208:	cf 92       	push	r12
     20a:	df 92       	push	r13
     20c:	ef 92       	push	r14
     20e:	ff 92       	push	r15
     210:	0f 93       	push	r16
     212:	1f 93       	push	r17
     214:	df 93       	push	r29
     216:	cf 93       	push	r28
     218:	00 d0       	rcall	.+0      	; 0x21a <led_alternating_onoff+0x26>
     21a:	00 d0       	rcall	.+0      	; 0x21c <led_alternating_onoff+0x28>
     21c:	cd b7       	in	r28, 0x3d	; 61
     21e:	de b7       	in	r29, 0x3e	; 62
     220:	1b 01       	movw	r2, r22
	
	for (int i=0;i<n;i++)
	{
		PORTD=(display<<4);
     222:	28 2f       	mov	r18, r24
     224:	22 95       	swap	r18
     226:	20 7f       	andi	r18, 0xF0	; 240
     228:	2a 83       	std	Y+2, r18	; 0x02
		PORTB=(display>>4);
     22a:	9c 01       	movw	r18, r24
     22c:	64 e0       	ldi	r22, 0x04	; 4
     22e:	35 95       	asr	r19
     230:	27 95       	ror	r18
     232:	6a 95       	dec	r22
     234:	e1 f7       	brne	.-8      	; 0x22e <led_alternating_onoff+0x3a>
     236:	29 83       	std	Y+1, r18	; 0x01
		_delay_ms(t);
		
		PORTD=(~display)<<4;
     238:	58 2e       	mov	r5, r24
     23a:	50 94       	com	r5
     23c:	52 94       	swap	r5
     23e:	30 ef       	ldi	r19, 0xF0	; 240
     240:	53 22       	and	r5, r19
		PORTB=(~display>>4);
     242:	80 95       	com	r24
     244:	90 95       	com	r25
     246:	24 e0       	ldi	r18, 0x04	; 4
     248:	95 95       	asr	r25
     24a:	87 95       	ror	r24
     24c:	2a 95       	dec	r18
     24e:	e1 f7       	brne	.-8      	; 0x248 <led_alternating_onoff+0x54>
     250:	48 2e       	mov	r4, r24
     252:	1c 82       	std	Y+4, r1	; 0x04
     254:	1b 82       	std	Y+3, r1	; 0x03
	
	for (int i=0;i<n;i++)
	{
		PORTD=(display<<4);
		PORTB=(display>>4);
		_delay_ms(t);
     256:	3a 01       	movw	r6, r20
     258:	88 24       	eor	r8, r8
     25a:	77 fc       	sbrc	r7, 7
     25c:	80 94       	com	r8
     25e:	98 2c       	mov	r9, r8
     260:	7d c0       	rjmp	.+250    	; 0x35c <led_alternating_onoff+0x168>
void led_alternating_onoff(int display , int n , int t)
{
	
	for (int i=0;i<n;i++)
	{
		PORTD=(display<<4);
     262:	8a 81       	ldd	r24, Y+2	; 0x02
     264:	8b b9       	out	0x0b, r24	; 11
		PORTB=(display>>4);
     266:	99 81       	ldd	r25, Y+1	; 0x01
     268:	95 b9       	out	0x05, r25	; 5
		_delay_ms(t);
     26a:	c4 01       	movw	r24, r8
     26c:	b3 01       	movw	r22, r6
     26e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__floatsisf>
     272:	5b 01       	movw	r10, r22
     274:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	4a e7       	ldi	r20, 0x7A	; 122
     27c:	55 e4       	ldi	r21, 0x45	; 69
     27e:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     282:	7b 01       	movw	r14, r22
     284:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	40 e8       	ldi	r20, 0x80	; 128
     28c:	5f e3       	ldi	r21, 0x3F	; 63
     28e:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     292:	88 23       	and	r24, r24
     294:	1c f4       	brge	.+6      	; 0x29c <led_alternating_onoff+0xa8>
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	70 e0       	ldi	r23, 0x00	; 0
     29a:	23 c0       	rjmp	.+70     	; 0x2e2 <led_alternating_onoff+0xee>
		__ticks = 1;
	else if (__tmp > 65535)
     29c:	c8 01       	movw	r24, r16
     29e:	b7 01       	movw	r22, r14
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	3f ef       	ldi	r19, 0xFF	; 255
     2a4:	4f e7       	ldi	r20, 0x7F	; 127
     2a6:	57 e4       	ldi	r21, 0x47	; 71
     2a8:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     2ac:	18 16       	cp	r1, r24
     2ae:	ac f4       	brge	.+42     	; 0x2da <led_alternating_onoff+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2b0:	c6 01       	movw	r24, r12
     2b2:	b5 01       	movw	r22, r10
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	40 e2       	ldi	r20, 0x20	; 32
     2ba:	51 e4       	ldi	r21, 0x41	; 65
     2bc:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     2c0:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <led_alternating_onoff+0xde>
     2c6:	80 e9       	ldi	r24, 0x90	; 144
     2c8:	91 e0       	ldi	r25, 0x01	; 1
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <led_alternating_onoff+0xd6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ce:	61 50       	subi	r22, 0x01	; 1
     2d0:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2d2:	61 15       	cp	r22, r1
     2d4:	71 05       	cpc	r23, r1
     2d6:	b9 f7       	brne	.-18     	; 0x2c6 <led_alternating_onoff+0xd2>
     2d8:	07 c0       	rjmp	.+14     	; 0x2e8 <led_alternating_onoff+0xf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2da:	c8 01       	movw	r24, r16
     2dc:	b7 01       	movw	r22, r14
     2de:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     2e2:	cb 01       	movw	r24, r22
     2e4:	01 97       	sbiw	r24, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <led_alternating_onoff+0xf0>
		
		PORTD=(~display)<<4;
     2e8:	5b b8       	out	0x0b, r5	; 11
		PORTB=(~display>>4);
     2ea:	45 b8       	out	0x05, r4	; 5
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     2ec:	c8 01       	movw	r24, r16
     2ee:	b7 01       	movw	r22, r14
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	40 e8       	ldi	r20, 0x80	; 128
     2f6:	5f e3       	ldi	r21, 0x3F	; 63
     2f8:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     2fc:	88 23       	and	r24, r24
     2fe:	1c f4       	brge	.+6      	; 0x306 <led_alternating_onoff+0x112>
     300:	61 e0       	ldi	r22, 0x01	; 1
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	23 c0       	rjmp	.+70     	; 0x34c <led_alternating_onoff+0x158>
		__ticks = 1;
	else if (__tmp > 65535)
     306:	c8 01       	movw	r24, r16
     308:	b7 01       	movw	r22, r14
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	3f ef       	ldi	r19, 0xFF	; 255
     30e:	4f e7       	ldi	r20, 0x7F	; 127
     310:	57 e4       	ldi	r21, 0x47	; 71
     312:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     316:	18 16       	cp	r1, r24
     318:	ac f4       	brge	.+42     	; 0x344 <led_alternating_onoff+0x150>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     31a:	c6 01       	movw	r24, r12
     31c:	b5 01       	movw	r22, r10
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e2       	ldi	r20, 0x20	; 32
     324:	51 e4       	ldi	r21, 0x41	; 65
     326:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     32a:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     32e:	06 c0       	rjmp	.+12     	; 0x33c <led_alternating_onoff+0x148>
     330:	80 e9       	ldi	r24, 0x90	; 144
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	f1 f7       	brne	.-4      	; 0x334 <led_alternating_onoff+0x140>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     338:	61 50       	subi	r22, 0x01	; 1
     33a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     33c:	61 15       	cp	r22, r1
     33e:	71 05       	cpc	r23, r1
     340:	b9 f7       	brne	.-18     	; 0x330 <led_alternating_onoff+0x13c>
     342:	07 c0       	rjmp	.+14     	; 0x352 <led_alternating_onoff+0x15e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     344:	c8 01       	movw	r24, r16
     346:	b7 01       	movw	r22, r14
     348:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     34c:	cb 01       	movw	r24, r22
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <led_alternating_onoff+0x15a>
//display을 입력한 대로 t의 주기를 가지며 n번을 반복한다.
//display : 16진수 입력(입력의1은 켜지는것을 의미 )
void led_alternating_onoff(int display , int n , int t)
{
	
	for (int i=0;i<n;i++)
     352:	eb 81       	ldd	r30, Y+3	; 0x03
     354:	fc 81       	ldd	r31, Y+4	; 0x04
     356:	31 96       	adiw	r30, 0x01	; 1
     358:	fc 83       	std	Y+4, r31	; 0x04
     35a:	eb 83       	std	Y+3, r30	; 0x03
     35c:	8b 81       	ldd	r24, Y+3	; 0x03
     35e:	9c 81       	ldd	r25, Y+4	; 0x04
     360:	82 15       	cp	r24, r2
     362:	93 05       	cpc	r25, r3
     364:	0c f4       	brge	.+2      	; 0x368 <led_alternating_onoff+0x174>
     366:	7d cf       	rjmp	.-262    	; 0x262 <led_alternating_onoff+0x6e>
		
		PORTD=(~display)<<4;
		PORTB=(~display>>4);
		_delay_ms(t);
	}
}
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	cf 91       	pop	r28
     372:	df 91       	pop	r29
     374:	1f 91       	pop	r17
     376:	0f 91       	pop	r16
     378:	ff 90       	pop	r15
     37a:	ef 90       	pop	r14
     37c:	df 90       	pop	r13
     37e:	cf 90       	pop	r12
     380:	bf 90       	pop	r11
     382:	af 90       	pop	r10
     384:	9f 90       	pop	r9
     386:	8f 90       	pop	r8
     388:	7f 90       	pop	r7
     38a:	6f 90       	pop	r6
     38c:	5f 90       	pop	r5
     38e:	4f 90       	pop	r4
     390:	3f 90       	pop	r3
     392:	2f 90       	pop	r2
     394:	08 95       	ret

00000396 <led_shift>:

//왕복 shift 	
//n= 왕복 횟수 , v= 이동송도(ms)
void led_shift(int n, int v)
{
     396:	3f 92       	push	r3
     398:	4f 92       	push	r4
     39a:	5f 92       	push	r5
     39c:	6f 92       	push	r6
     39e:	7f 92       	push	r7
     3a0:	8f 92       	push	r8
     3a2:	9f 92       	push	r9
     3a4:	af 92       	push	r10
     3a6:	bf 92       	push	r11
     3a8:	cf 92       	push	r12
     3aa:	df 92       	push	r13
     3ac:	ef 92       	push	r14
     3ae:	ff 92       	push	r15
     3b0:	0f 93       	push	r16
     3b2:	1f 93       	push	r17
     3b4:	df 93       	push	r29
     3b6:	cf 93       	push	r28
     3b8:	cd b7       	in	r28, 0x3d	; 61
     3ba:	de b7       	in	r29, 0x3e	; 62
     3bc:	28 97       	sbiw	r28, 0x08	; 8
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	cd bf       	out	0x3d, r28	; 61
     3c8:	9a 83       	std	Y+2, r25	; 0x02
     3ca:	89 83       	std	Y+1, r24	; 0x01
     3cc:	88 24       	eor	r8, r8
     3ce:	99 24       	eor	r9, r9
	int cnt=0;
	while(1)
	{
		PORTD=0xFF;
     3d0:	33 24       	eor	r3, r3
     3d2:	3a 94       	dec	r3
		}
	
		for (int i= 0;i<4;i++)
		{
			PORTD= ~ (0x10<<i);
			_delay_ms(v);
     3d4:	cb 01       	movw	r24, r22
     3d6:	aa 27       	eor	r26, r26
     3d8:	97 fd       	sbrc	r25, 7
     3da:	a0 95       	com	r26
     3dc:	ba 2f       	mov	r27, r26
     3de:	8b 83       	std	Y+3, r24	; 0x03
     3e0:	9c 83       	std	Y+4, r25	; 0x04
     3e2:	ad 83       	std	Y+5, r26	; 0x05
     3e4:	be 83       	std	Y+6, r27	; 0x06
     3e6:	70 e9       	ldi	r23, 0x90	; 144
     3e8:	47 2e       	mov	r4, r23
     3ea:	71 e0       	ldi	r23, 0x01	; 1
     3ec:	57 2e       	mov	r5, r23
void led_shift(int n, int v)
{
	int cnt=0;
	while(1)
	{
		PORTD=0xFF;
     3ee:	3b b8       	out	0x0b, r3	; 11
		PORTB=0xFF;
     3f0:	35 b8       	out	0x05, r3	; 5
		if (cnt==n)
     3f2:	a9 81       	ldd	r26, Y+1	; 0x01
     3f4:	ba 81       	ldd	r27, Y+2	; 0x02
     3f6:	8a 16       	cp	r8, r26
     3f8:	9b 06       	cpc	r9, r27
     3fa:	09 f4       	brne	.+2      	; 0x3fe <led_shift+0x68>
     3fc:	25 c1       	rjmp	.+586    	; 0x648 <led_shift+0x2b2>
		}
	
		for (int i= 0;i<4;i++)
		{
			PORTD= ~ (0x10<<i);
			_delay_ms(v);
     3fe:	6b 81       	ldd	r22, Y+3	; 0x03
     400:	7c 81       	ldd	r23, Y+4	; 0x04
     402:	8d 81       	ldd	r24, Y+5	; 0x05
     404:	9e 81       	ldd	r25, Y+6	; 0x06
     406:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__floatsisf>
     40a:	5b 01       	movw	r10, r22
     40c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
     412:	4a e7       	ldi	r20, 0x7A	; 122
     414:	55 e4       	ldi	r21, 0x45	; 69
     416:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     41a:	7b 01       	movw	r14, r22
     41c:	8c 01       	movw	r16, r24
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     41e:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     422:	3b 01       	movw	r6, r22
     424:	18 86       	std	Y+8, r1	; 0x08
     426:	1f 82       	std	Y+7, r1	; 0x07
			return;
		}
	
		for (int i= 0;i<4;i++)
		{
			PORTD= ~ (0x10<<i);
     428:	80 e1       	ldi	r24, 0x10	; 16
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0f 80       	ldd	r0, Y+7	; 0x07
     42e:	02 c0       	rjmp	.+4      	; 0x434 <led_shift+0x9e>
     430:	88 0f       	add	r24, r24
     432:	99 1f       	adc	r25, r25
     434:	0a 94       	dec	r0
     436:	e2 f7       	brpl	.-8      	; 0x430 <led_shift+0x9a>
     438:	80 95       	com	r24
     43a:	8b b9       	out	0x0b, r24	; 11
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     43c:	c8 01       	movw	r24, r16
     43e:	b7 01       	movw	r22, r14
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	40 e8       	ldi	r20, 0x80	; 128
     446:	5f e3       	ldi	r21, 0x3F	; 63
     448:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     44c:	87 fd       	sbrc	r24, 7
     44e:	20 c0       	rjmp	.+64     	; 0x490 <led_shift+0xfa>
		__ticks = 1;
	else if (__tmp > 65535)
     450:	c8 01       	movw	r24, r16
     452:	b7 01       	movw	r22, r14
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	3f ef       	ldi	r19, 0xFF	; 255
     458:	4f e7       	ldi	r20, 0x7F	; 127
     45a:	57 e4       	ldi	r21, 0x47	; 71
     45c:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     460:	18 16       	cp	r1, r24
     462:	14 f0       	brlt	.+4      	; 0x468 <led_shift+0xd2>
     464:	93 01       	movw	r18, r6
     466:	16 c0       	rjmp	.+44     	; 0x494 <led_shift+0xfe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     468:	c6 01       	movw	r24, r12
     46a:	b5 01       	movw	r22, r10
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	40 e2       	ldi	r20, 0x20	; 32
     472:	51 e4       	ldi	r21, 0x41	; 65
     474:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     478:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     47c:	05 c0       	rjmp	.+10     	; 0x488 <led_shift+0xf2>
     47e:	c2 01       	movw	r24, r4
     480:	01 97       	sbiw	r24, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <led_shift+0xea>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     484:	61 50       	subi	r22, 0x01	; 1
     486:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     488:	61 15       	cp	r22, r1
     48a:	71 05       	cpc	r23, r1
     48c:	c1 f7       	brne	.-16     	; 0x47e <led_shift+0xe8>
     48e:	05 c0       	rjmp	.+10     	; 0x49a <led_shift+0x104>
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	c9 01       	movw	r24, r18
     496:	01 97       	sbiw	r24, 0x01	; 1
     498:	f1 f7       	brne	.-4      	; 0x496 <led_shift+0x100>
		if (cnt==n)
		{
			return;
		}
	
		for (int i= 0;i<4;i++)
     49a:	ef 81       	ldd	r30, Y+7	; 0x07
     49c:	f8 85       	ldd	r31, Y+8	; 0x08
     49e:	31 96       	adiw	r30, 0x01	; 1
     4a0:	f8 87       	std	Y+8, r31	; 0x08
     4a2:	ef 83       	std	Y+7, r30	; 0x07
     4a4:	34 97       	sbiw	r30, 0x04	; 4
     4a6:	09 f0       	breq	.+2      	; 0x4aa <led_shift+0x114>
     4a8:	bf cf       	rjmp	.-130    	; 0x428 <led_shift+0x92>
		{
			PORTD= ~ (0x10<<i);
			_delay_ms(v);
		}
	
		PORTD=0xFF;
     4aa:	3b b8       	out	0x0b, r3	; 11
     4ac:	18 86       	std	Y+8, r1	; 0x08
     4ae:	1f 82       	std	Y+7, r1	; 0x07
		for (int i= 0;i<4;i++)
		{
			PORTB= ~ (0x01<<i);
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	0f 80       	ldd	r0, Y+7	; 0x07
     4b6:	02 c0       	rjmp	.+4      	; 0x4bc <led_shift+0x126>
     4b8:	88 0f       	add	r24, r24
     4ba:	99 1f       	adc	r25, r25
     4bc:	0a 94       	dec	r0
     4be:	e2 f7       	brpl	.-8      	; 0x4b8 <led_shift+0x122>
     4c0:	80 95       	com	r24
     4c2:	85 b9       	out	0x05, r24	; 5
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     4c4:	c8 01       	movw	r24, r16
     4c6:	b7 01       	movw	r22, r14
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	40 e8       	ldi	r20, 0x80	; 128
     4ce:	5f e3       	ldi	r21, 0x3F	; 63
     4d0:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     4d4:	87 fd       	sbrc	r24, 7
     4d6:	20 c0       	rjmp	.+64     	; 0x518 <led_shift+0x182>
		__ticks = 1;
	else if (__tmp > 65535)
     4d8:	c8 01       	movw	r24, r16
     4da:	b7 01       	movw	r22, r14
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	3f ef       	ldi	r19, 0xFF	; 255
     4e0:	4f e7       	ldi	r20, 0x7F	; 127
     4e2:	57 e4       	ldi	r21, 0x47	; 71
     4e4:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     4e8:	18 16       	cp	r1, r24
     4ea:	14 f0       	brlt	.+4      	; 0x4f0 <led_shift+0x15a>
     4ec:	93 01       	movw	r18, r6
     4ee:	16 c0       	rjmp	.+44     	; 0x51c <led_shift+0x186>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4f0:	c6 01       	movw	r24, r12
     4f2:	b5 01       	movw	r22, r10
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	40 e2       	ldi	r20, 0x20	; 32
     4fa:	51 e4       	ldi	r21, 0x41	; 65
     4fc:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     500:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     504:	05 c0       	rjmp	.+10     	; 0x510 <led_shift+0x17a>
     506:	c2 01       	movw	r24, r4
     508:	01 97       	sbiw	r24, 0x01	; 1
     50a:	f1 f7       	brne	.-4      	; 0x508 <led_shift+0x172>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     50c:	61 50       	subi	r22, 0x01	; 1
     50e:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     510:	61 15       	cp	r22, r1
     512:	71 05       	cpc	r23, r1
     514:	c1 f7       	brne	.-16     	; 0x506 <led_shift+0x170>
     516:	05 c0       	rjmp	.+10     	; 0x522 <led_shift+0x18c>
     518:	21 e0       	ldi	r18, 0x01	; 1
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	c9 01       	movw	r24, r18
     51e:	01 97       	sbiw	r24, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <led_shift+0x188>
			PORTD= ~ (0x10<<i);
			_delay_ms(v);
		}
	
		PORTD=0xFF;
		for (int i= 0;i<4;i++)
     522:	8f 81       	ldd	r24, Y+7	; 0x07
     524:	98 85       	ldd	r25, Y+8	; 0x08
     526:	01 96       	adiw	r24, 0x01	; 1
     528:	98 87       	std	Y+8, r25	; 0x08
     52a:	8f 83       	std	Y+7, r24	; 0x07
     52c:	04 97       	sbiw	r24, 0x04	; 4
     52e:	09 f0       	breq	.+2      	; 0x532 <led_shift+0x19c>
     530:	bf cf       	rjmp	.-130    	; 0x4b0 <led_shift+0x11a>
     532:	18 86       	std	Y+8, r1	; 0x08
     534:	1f 82       	std	Y+7, r1	; 0x07
			PORTB= ~ (0x01<<i);
			_delay_ms(v);
		}
		for (int i= 0;i<5;i++)
		{
			PORTB= ~ (0x10>>i);
     536:	80 e1       	ldi	r24, 0x10	; 16
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0f 80       	ldd	r0, Y+7	; 0x07
     53c:	02 c0       	rjmp	.+4      	; 0x542 <led_shift+0x1ac>
     53e:	95 95       	asr	r25
     540:	87 95       	ror	r24
     542:	0a 94       	dec	r0
     544:	e2 f7       	brpl	.-8      	; 0x53e <led_shift+0x1a8>
     546:	80 95       	com	r24
     548:	85 b9       	out	0x05, r24	; 5
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     54a:	c8 01       	movw	r24, r16
     54c:	b7 01       	movw	r22, r14
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	40 e8       	ldi	r20, 0x80	; 128
     554:	5f e3       	ldi	r21, 0x3F	; 63
     556:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     55a:	87 fd       	sbrc	r24, 7
     55c:	20 c0       	rjmp	.+64     	; 0x59e <led_shift+0x208>
		__ticks = 1;
	else if (__tmp > 65535)
     55e:	c8 01       	movw	r24, r16
     560:	b7 01       	movw	r22, r14
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	3f ef       	ldi	r19, 0xFF	; 255
     566:	4f e7       	ldi	r20, 0x7F	; 127
     568:	57 e4       	ldi	r21, 0x47	; 71
     56a:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     56e:	18 16       	cp	r1, r24
     570:	14 f0       	brlt	.+4      	; 0x576 <led_shift+0x1e0>
     572:	93 01       	movw	r18, r6
     574:	16 c0       	rjmp	.+44     	; 0x5a2 <led_shift+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     576:	c6 01       	movw	r24, r12
     578:	b5 01       	movw	r22, r10
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 e2       	ldi	r20, 0x20	; 32
     580:	51 e4       	ldi	r21, 0x41	; 65
     582:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     586:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     58a:	05 c0       	rjmp	.+10     	; 0x596 <led_shift+0x200>
     58c:	c2 01       	movw	r24, r4
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	f1 f7       	brne	.-4      	; 0x58e <led_shift+0x1f8>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     592:	61 50       	subi	r22, 0x01	; 1
     594:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     596:	61 15       	cp	r22, r1
     598:	71 05       	cpc	r23, r1
     59a:	c1 f7       	brne	.-16     	; 0x58c <led_shift+0x1f6>
     59c:	05 c0       	rjmp	.+10     	; 0x5a8 <led_shift+0x212>
     59e:	21 e0       	ldi	r18, 0x01	; 1
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	c9 01       	movw	r24, r18
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <led_shift+0x20e>
		for (int i= 0;i<4;i++)
		{
			PORTB= ~ (0x01<<i);
			_delay_ms(v);
		}
		for (int i= 0;i<5;i++)
     5a8:	af 81       	ldd	r26, Y+7	; 0x07
     5aa:	b8 85       	ldd	r27, Y+8	; 0x08
     5ac:	11 96       	adiw	r26, 0x01	; 1
     5ae:	b8 87       	std	Y+8, r27	; 0x08
     5b0:	af 83       	std	Y+7, r26	; 0x07
     5b2:	15 97       	sbiw	r26, 0x05	; 5
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <led_shift+0x222>
     5b6:	bf cf       	rjmp	.-130    	; 0x536 <led_shift+0x1a0>
		{
			PORTB= ~ (0x10>>i);
			_delay_ms(v);
		}
		PORTB=0xFF;
     5b8:	35 b8       	out	0x05, r3	; 5
     5ba:	18 86       	std	Y+8, r1	; 0x08
     5bc:	1f 82       	std	Y+7, r1	; 0x07
		for (int i= 0;i<4;i++)
		{
			PORTD= ~ (0x80>>i);
     5be:	80 e8       	ldi	r24, 0x80	; 128
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0f 80       	ldd	r0, Y+7	; 0x07
     5c4:	02 c0       	rjmp	.+4      	; 0x5ca <led_shift+0x234>
     5c6:	95 95       	asr	r25
     5c8:	87 95       	ror	r24
     5ca:	0a 94       	dec	r0
     5cc:	e2 f7       	brpl	.-8      	; 0x5c6 <led_shift+0x230>
     5ce:	80 95       	com	r24
     5d0:	8b b9       	out	0x0b, r24	; 11
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     5d2:	c8 01       	movw	r24, r16
     5d4:	b7 01       	movw	r22, r14
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e8       	ldi	r20, 0x80	; 128
     5dc:	5f e3       	ldi	r21, 0x3F	; 63
     5de:	0e 94 95 06 	call	0xd2a	; 0xd2a <__ltsf2>
     5e2:	87 fd       	sbrc	r24, 7
     5e4:	20 c0       	rjmp	.+64     	; 0x626 <led_shift+0x290>
		__ticks = 1;
	else if (__tmp > 65535)
     5e6:	c8 01       	movw	r24, r16
     5e8:	b7 01       	movw	r22, r14
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	3f ef       	ldi	r19, 0xFF	; 255
     5ee:	4f e7       	ldi	r20, 0x7F	; 127
     5f0:	57 e4       	ldi	r21, 0x47	; 71
     5f2:	0e 94 35 06 	call	0xc6a	; 0xc6a <__gtsf2>
     5f6:	18 16       	cp	r1, r24
     5f8:	14 f0       	brlt	.+4      	; 0x5fe <led_shift+0x268>
     5fa:	93 01       	movw	r18, r6
     5fc:	16 c0       	rjmp	.+44     	; 0x62a <led_shift+0x294>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5fe:	c6 01       	movw	r24, r12
     600:	b5 01       	movw	r22, r10
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	40 e2       	ldi	r20, 0x20	; 32
     608:	51 e4       	ldi	r21, 0x41	; 65
     60a:	0e 94 3b 05 	call	0xa76	; 0xa76 <__mulsf3>
     60e:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fixunssfsi>
     612:	05 c0       	rjmp	.+10     	; 0x61e <led_shift+0x288>
     614:	c2 01       	movw	r24, r4
     616:	01 97       	sbiw	r24, 0x01	; 1
     618:	f1 f7       	brne	.-4      	; 0x616 <led_shift+0x280>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     61a:	61 50       	subi	r22, 0x01	; 1
     61c:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     61e:	61 15       	cp	r22, r1
     620:	71 05       	cpc	r23, r1
     622:	c1 f7       	brne	.-16     	; 0x614 <led_shift+0x27e>
     624:	05 c0       	rjmp	.+10     	; 0x630 <led_shift+0x29a>
     626:	21 e0       	ldi	r18, 0x01	; 1
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	c9 01       	movw	r24, r18
     62c:	01 97       	sbiw	r24, 0x01	; 1
     62e:	f1 f7       	brne	.-4      	; 0x62c <led_shift+0x296>
		{
			PORTB= ~ (0x10>>i);
			_delay_ms(v);
		}
		PORTB=0xFF;
		for (int i= 0;i<4;i++)
     630:	ef 81       	ldd	r30, Y+7	; 0x07
     632:	f8 85       	ldd	r31, Y+8	; 0x08
     634:	31 96       	adiw	r30, 0x01	; 1
     636:	f8 87       	std	Y+8, r31	; 0x08
     638:	ef 83       	std	Y+7, r30	; 0x07
     63a:	34 97       	sbiw	r30, 0x04	; 4
     63c:	09 f0       	breq	.+2      	; 0x640 <led_shift+0x2aa>
     63e:	bf cf       	rjmp	.-130    	; 0x5be <led_shift+0x228>
		{
			PORTD= ~ (0x80>>i);
			_delay_ms(v);
		}
		cnt++;
     640:	08 94       	sec
     642:	81 1c       	adc	r8, r1
     644:	91 1c       	adc	r9, r1
     646:	d3 ce       	rjmp	.-602    	; 0x3ee <led_shift+0x58>
	}
}
     648:	28 96       	adiw	r28, 0x08	; 8
     64a:	0f b6       	in	r0, 0x3f	; 63
     64c:	f8 94       	cli
     64e:	de bf       	out	0x3e, r29	; 62
     650:	0f be       	out	0x3f, r0	; 63
     652:	cd bf       	out	0x3d, r28	; 61
     654:	cf 91       	pop	r28
     656:	df 91       	pop	r29
     658:	1f 91       	pop	r17
     65a:	0f 91       	pop	r16
     65c:	ff 90       	pop	r15
     65e:	ef 90       	pop	r14
     660:	df 90       	pop	r13
     662:	cf 90       	pop	r12
     664:	bf 90       	pop	r11
     666:	af 90       	pop	r10
     668:	9f 90       	pop	r9
     66a:	8f 90       	pop	r8
     66c:	7f 90       	pop	r7
     66e:	6f 90       	pop	r6
     670:	5f 90       	pop	r5
     672:	4f 90       	pop	r4
     674:	3f 90       	pop	r3
     676:	08 95       	ret

00000678 <main>:

void main()
{
	DDRD=0xF0;
     678:	80 ef       	ldi	r24, 0xF0	; 240
     67a:	8a b9       	out	0x0a, r24	; 10
	DDRB=0x0F;
     67c:	8f e0       	ldi	r24, 0x0F	; 15
     67e:	84 b9       	out	0x04, r24	; 4

	while(1)
	{
    
		//led 전체를 200ms의 주기로 3번 반복하라.
		led_all_onoff(3,200);
     680:	83 e0       	ldi	r24, 0x03	; 3
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	68 ec       	ldi	r22, 0xC8	; 200
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	0e 94 4b 00 	call	0x96	; 0x96 <led_all_onoff>
    
		//입력한 모양대로 시작으로 교대로 300ms의 주기로 3번 반복하라 
		//세트 1 
		led_alternating_onoff(0xAA,3,300);
     68c:	8a ea       	ldi	r24, 0xAA	; 170
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	63 e0       	ldi	r22, 0x03	; 3
     692:	70 e0       	ldi	r23, 0x00	; 0
     694:	4c e2       	ldi	r20, 0x2C	; 44
     696:	51 e0       	ldi	r21, 0x01	; 1
     698:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <led_alternating_onoff>
		//세트2 
		led_alternating_onoff(0xF0,3,300);
     69c:	80 ef       	ldi	r24, 0xF0	; 240
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	63 e0       	ldi	r22, 0x03	; 3
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	4c e2       	ldi	r20, 0x2C	; 44
     6a6:	51 e0       	ldi	r21, 0x01	; 1
     6a8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <led_alternating_onoff>
		//세트 3 
		led_alternating_onoff(0xC3,3,300);
     6ac:	83 ec       	ldi	r24, 0xC3	; 195
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	63 e0       	ldi	r22, 0x03	; 3
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	4c e2       	ldi	r20, 0x2C	; 44
     6b6:	51 e0       	ldi	r21, 0x01	; 1
     6b8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <led_alternating_onoff>

    	//led 왼쪽->오른쪽을 300ms의 주기로 5번을 반복한다.
		led_shift(5,300);
     6bc:	85 e0       	ldi	r24, 0x05	; 5
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	6c e2       	ldi	r22, 0x2C	; 44
     6c2:	71 e0       	ldi	r23, 0x01	; 1
     6c4:	0e 94 cb 01 	call	0x396	; 0x396 <led_shift>
     6c8:	db cf       	rjmp	.-74     	; 0x680 <main+0x8>

000006ca <__fixunssfsi>:
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	7b 01       	movw	r14, r22
     6d4:	8c 01       	movw	r16, r24
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 e0       	ldi	r20, 0x00	; 0
     6dc:	5f e4       	ldi	r21, 0x4F	; 79
     6de:	0e 94 65 06 	call	0xcca	; 0xcca <__gesf2>
     6e2:	88 23       	and	r24, r24
     6e4:	8c f0       	brlt	.+34     	; 0x708 <__fixunssfsi+0x3e>
     6e6:	c8 01       	movw	r24, r16
     6e8:	b7 01       	movw	r22, r14
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	40 e0       	ldi	r20, 0x00	; 0
     6f0:	5f e4       	ldi	r21, 0x4F	; 79
     6f2:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__subsf3>
     6f6:	0e 94 23 07 	call	0xe46	; 0xe46 <__fixsfsi>
     6fa:	9b 01       	movw	r18, r22
     6fc:	ac 01       	movw	r20, r24
     6fe:	20 50       	subi	r18, 0x00	; 0
     700:	30 40       	sbci	r19, 0x00	; 0
     702:	40 40       	sbci	r20, 0x00	; 0
     704:	50 48       	sbci	r21, 0x80	; 128
     706:	06 c0       	rjmp	.+12     	; 0x714 <__fixunssfsi+0x4a>
     708:	c8 01       	movw	r24, r16
     70a:	b7 01       	movw	r22, r14
     70c:	0e 94 23 07 	call	0xe46	; 0xe46 <__fixsfsi>
     710:	9b 01       	movw	r18, r22
     712:	ac 01       	movw	r20, r24
     714:	b9 01       	movw	r22, r18
     716:	ca 01       	movw	r24, r20
     718:	1f 91       	pop	r17
     71a:	0f 91       	pop	r16
     71c:	ff 90       	pop	r15
     71e:	ef 90       	pop	r14
     720:	08 95       	ret

00000722 <_fpadd_parts>:
     722:	a0 e0       	ldi	r26, 0x00	; 0
     724:	b0 e0       	ldi	r27, 0x00	; 0
     726:	e7 e9       	ldi	r30, 0x97	; 151
     728:	f3 e0       	ldi	r31, 0x03	; 3
     72a:	0c 94 6c 09 	jmp	0x12d8	; 0x12d8 <__prologue_saves__>
     72e:	dc 01       	movw	r26, r24
     730:	2b 01       	movw	r4, r22
     732:	fa 01       	movw	r30, r20
     734:	9c 91       	ld	r25, X
     736:	92 30       	cpi	r25, 0x02	; 2
     738:	08 f4       	brcc	.+2      	; 0x73c <_fpadd_parts+0x1a>
     73a:	39 c1       	rjmp	.+626    	; 0x9ae <__stack+0xaf>
     73c:	eb 01       	movw	r28, r22
     73e:	88 81       	ld	r24, Y
     740:	82 30       	cpi	r24, 0x02	; 2
     742:	08 f4       	brcc	.+2      	; 0x746 <_fpadd_parts+0x24>
     744:	33 c1       	rjmp	.+614    	; 0x9ac <__stack+0xad>
     746:	94 30       	cpi	r25, 0x04	; 4
     748:	69 f4       	brne	.+26     	; 0x764 <_fpadd_parts+0x42>
     74a:	84 30       	cpi	r24, 0x04	; 4
     74c:	09 f0       	breq	.+2      	; 0x750 <_fpadd_parts+0x2e>
     74e:	2f c1       	rjmp	.+606    	; 0x9ae <__stack+0xaf>
     750:	11 96       	adiw	r26, 0x01	; 1
     752:	9c 91       	ld	r25, X
     754:	11 97       	sbiw	r26, 0x01	; 1
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	98 17       	cp	r25, r24
     75a:	09 f4       	brne	.+2      	; 0x75e <_fpadd_parts+0x3c>
     75c:	28 c1       	rjmp	.+592    	; 0x9ae <__stack+0xaf>
     75e:	a0 e0       	ldi	r26, 0x00	; 0
     760:	b1 e0       	ldi	r27, 0x01	; 1
     762:	25 c1       	rjmp	.+586    	; 0x9ae <__stack+0xaf>
     764:	84 30       	cpi	r24, 0x04	; 4
     766:	09 f4       	brne	.+2      	; 0x76a <_fpadd_parts+0x48>
     768:	21 c1       	rjmp	.+578    	; 0x9ac <__stack+0xad>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	a9 f4       	brne	.+42     	; 0x798 <_fpadd_parts+0x76>
     76e:	92 30       	cpi	r25, 0x02	; 2
     770:	09 f0       	breq	.+2      	; 0x774 <_fpadd_parts+0x52>
     772:	1d c1       	rjmp	.+570    	; 0x9ae <__stack+0xaf>
     774:	9a 01       	movw	r18, r20
     776:	ad 01       	movw	r20, r26
     778:	88 e0       	ldi	r24, 0x08	; 8
     77a:	ea 01       	movw	r28, r20
     77c:	09 90       	ld	r0, Y+
     77e:	ae 01       	movw	r20, r28
     780:	e9 01       	movw	r28, r18
     782:	09 92       	st	Y+, r0
     784:	9e 01       	movw	r18, r28
     786:	81 50       	subi	r24, 0x01	; 1
     788:	c1 f7       	brne	.-16     	; 0x77a <_fpadd_parts+0x58>
     78a:	e2 01       	movw	r28, r4
     78c:	89 81       	ldd	r24, Y+1	; 0x01
     78e:	11 96       	adiw	r26, 0x01	; 1
     790:	9c 91       	ld	r25, X
     792:	89 23       	and	r24, r25
     794:	81 83       	std	Z+1, r24	; 0x01
     796:	08 c1       	rjmp	.+528    	; 0x9a8 <__stack+0xa9>
     798:	92 30       	cpi	r25, 0x02	; 2
     79a:	09 f4       	brne	.+2      	; 0x79e <_fpadd_parts+0x7c>
     79c:	07 c1       	rjmp	.+526    	; 0x9ac <__stack+0xad>
     79e:	12 96       	adiw	r26, 0x02	; 2
     7a0:	2d 90       	ld	r2, X+
     7a2:	3c 90       	ld	r3, X
     7a4:	13 97       	sbiw	r26, 0x03	; 3
     7a6:	eb 01       	movw	r28, r22
     7a8:	8a 81       	ldd	r24, Y+2	; 0x02
     7aa:	9b 81       	ldd	r25, Y+3	; 0x03
     7ac:	14 96       	adiw	r26, 0x04	; 4
     7ae:	ad 90       	ld	r10, X+
     7b0:	bd 90       	ld	r11, X+
     7b2:	cd 90       	ld	r12, X+
     7b4:	dc 90       	ld	r13, X
     7b6:	17 97       	sbiw	r26, 0x07	; 7
     7b8:	ec 80       	ldd	r14, Y+4	; 0x04
     7ba:	fd 80       	ldd	r15, Y+5	; 0x05
     7bc:	0e 81       	ldd	r16, Y+6	; 0x06
     7be:	1f 81       	ldd	r17, Y+7	; 0x07
     7c0:	91 01       	movw	r18, r2
     7c2:	28 1b       	sub	r18, r24
     7c4:	39 0b       	sbc	r19, r25
     7c6:	b9 01       	movw	r22, r18
     7c8:	37 ff       	sbrs	r19, 7
     7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <_fpadd_parts+0xb2>
     7cc:	66 27       	eor	r22, r22
     7ce:	77 27       	eor	r23, r23
     7d0:	62 1b       	sub	r22, r18
     7d2:	73 0b       	sbc	r23, r19
     7d4:	60 32       	cpi	r22, 0x20	; 32
     7d6:	71 05       	cpc	r23, r1
     7d8:	0c f0       	brlt	.+2      	; 0x7dc <_fpadd_parts+0xba>
     7da:	61 c0       	rjmp	.+194    	; 0x89e <_fpadd_parts+0x17c>
     7dc:	12 16       	cp	r1, r18
     7de:	13 06       	cpc	r1, r19
     7e0:	6c f5       	brge	.+90     	; 0x83c <_fpadd_parts+0x11a>
     7e2:	37 01       	movw	r6, r14
     7e4:	48 01       	movw	r8, r16
     7e6:	06 2e       	mov	r0, r22
     7e8:	04 c0       	rjmp	.+8      	; 0x7f2 <_fpadd_parts+0xd0>
     7ea:	96 94       	lsr	r9
     7ec:	87 94       	ror	r8
     7ee:	77 94       	ror	r7
     7f0:	67 94       	ror	r6
     7f2:	0a 94       	dec	r0
     7f4:	d2 f7       	brpl	.-12     	; 0x7ea <_fpadd_parts+0xc8>
     7f6:	21 e0       	ldi	r18, 0x01	; 1
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e0       	ldi	r20, 0x00	; 0
     7fc:	50 e0       	ldi	r21, 0x00	; 0
     7fe:	04 c0       	rjmp	.+8      	; 0x808 <_fpadd_parts+0xe6>
     800:	22 0f       	add	r18, r18
     802:	33 1f       	adc	r19, r19
     804:	44 1f       	adc	r20, r20
     806:	55 1f       	adc	r21, r21
     808:	6a 95       	dec	r22
     80a:	d2 f7       	brpl	.-12     	; 0x800 <_fpadd_parts+0xde>
     80c:	21 50       	subi	r18, 0x01	; 1
     80e:	30 40       	sbci	r19, 0x00	; 0
     810:	40 40       	sbci	r20, 0x00	; 0
     812:	50 40       	sbci	r21, 0x00	; 0
     814:	2e 21       	and	r18, r14
     816:	3f 21       	and	r19, r15
     818:	40 23       	and	r20, r16
     81a:	51 23       	and	r21, r17
     81c:	21 15       	cp	r18, r1
     81e:	31 05       	cpc	r19, r1
     820:	41 05       	cpc	r20, r1
     822:	51 05       	cpc	r21, r1
     824:	21 f0       	breq	.+8      	; 0x82e <_fpadd_parts+0x10c>
     826:	21 e0       	ldi	r18, 0x01	; 1
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	40 e0       	ldi	r20, 0x00	; 0
     82c:	50 e0       	ldi	r21, 0x00	; 0
     82e:	79 01       	movw	r14, r18
     830:	8a 01       	movw	r16, r20
     832:	e6 28       	or	r14, r6
     834:	f7 28       	or	r15, r7
     836:	08 29       	or	r16, r8
     838:	19 29       	or	r17, r9
     83a:	3c c0       	rjmp	.+120    	; 0x8b4 <_fpadd_parts+0x192>
     83c:	23 2b       	or	r18, r19
     83e:	d1 f1       	breq	.+116    	; 0x8b4 <_fpadd_parts+0x192>
     840:	26 0e       	add	r2, r22
     842:	37 1e       	adc	r3, r23
     844:	35 01       	movw	r6, r10
     846:	46 01       	movw	r8, r12
     848:	06 2e       	mov	r0, r22
     84a:	04 c0       	rjmp	.+8      	; 0x854 <_fpadd_parts+0x132>
     84c:	96 94       	lsr	r9
     84e:	87 94       	ror	r8
     850:	77 94       	ror	r7
     852:	67 94       	ror	r6
     854:	0a 94       	dec	r0
     856:	d2 f7       	brpl	.-12     	; 0x84c <_fpadd_parts+0x12a>
     858:	21 e0       	ldi	r18, 0x01	; 1
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	04 c0       	rjmp	.+8      	; 0x86a <_fpadd_parts+0x148>
     862:	22 0f       	add	r18, r18
     864:	33 1f       	adc	r19, r19
     866:	44 1f       	adc	r20, r20
     868:	55 1f       	adc	r21, r21
     86a:	6a 95       	dec	r22
     86c:	d2 f7       	brpl	.-12     	; 0x862 <_fpadd_parts+0x140>
     86e:	21 50       	subi	r18, 0x01	; 1
     870:	30 40       	sbci	r19, 0x00	; 0
     872:	40 40       	sbci	r20, 0x00	; 0
     874:	50 40       	sbci	r21, 0x00	; 0
     876:	2a 21       	and	r18, r10
     878:	3b 21       	and	r19, r11
     87a:	4c 21       	and	r20, r12
     87c:	5d 21       	and	r21, r13
     87e:	21 15       	cp	r18, r1
     880:	31 05       	cpc	r19, r1
     882:	41 05       	cpc	r20, r1
     884:	51 05       	cpc	r21, r1
     886:	21 f0       	breq	.+8      	; 0x890 <_fpadd_parts+0x16e>
     888:	21 e0       	ldi	r18, 0x01	; 1
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	40 e0       	ldi	r20, 0x00	; 0
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	59 01       	movw	r10, r18
     892:	6a 01       	movw	r12, r20
     894:	a6 28       	or	r10, r6
     896:	b7 28       	or	r11, r7
     898:	c8 28       	or	r12, r8
     89a:	d9 28       	or	r13, r9
     89c:	0b c0       	rjmp	.+22     	; 0x8b4 <_fpadd_parts+0x192>
     89e:	82 15       	cp	r24, r2
     8a0:	93 05       	cpc	r25, r3
     8a2:	2c f0       	brlt	.+10     	; 0x8ae <_fpadd_parts+0x18c>
     8a4:	1c 01       	movw	r2, r24
     8a6:	aa 24       	eor	r10, r10
     8a8:	bb 24       	eor	r11, r11
     8aa:	65 01       	movw	r12, r10
     8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <_fpadd_parts+0x192>
     8ae:	ee 24       	eor	r14, r14
     8b0:	ff 24       	eor	r15, r15
     8b2:	87 01       	movw	r16, r14
     8b4:	11 96       	adiw	r26, 0x01	; 1
     8b6:	9c 91       	ld	r25, X
     8b8:	d2 01       	movw	r26, r4
     8ba:	11 96       	adiw	r26, 0x01	; 1
     8bc:	8c 91       	ld	r24, X
     8be:	98 17       	cp	r25, r24
     8c0:	09 f4       	brne	.+2      	; 0x8c4 <_fpadd_parts+0x1a2>
     8c2:	45 c0       	rjmp	.+138    	; 0x94e <__stack+0x4f>
     8c4:	99 23       	and	r25, r25
     8c6:	39 f0       	breq	.+14     	; 0x8d6 <_fpadd_parts+0x1b4>
     8c8:	a8 01       	movw	r20, r16
     8ca:	97 01       	movw	r18, r14
     8cc:	2a 19       	sub	r18, r10
     8ce:	3b 09       	sbc	r19, r11
     8d0:	4c 09       	sbc	r20, r12
     8d2:	5d 09       	sbc	r21, r13
     8d4:	06 c0       	rjmp	.+12     	; 0x8e2 <_fpadd_parts+0x1c0>
     8d6:	a6 01       	movw	r20, r12
     8d8:	95 01       	movw	r18, r10
     8da:	2e 19       	sub	r18, r14
     8dc:	3f 09       	sbc	r19, r15
     8de:	40 0b       	sbc	r20, r16
     8e0:	51 0b       	sbc	r21, r17
     8e2:	57 fd       	sbrc	r21, 7
     8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <_fpadd_parts+0x1d4>
     8e6:	11 82       	std	Z+1, r1	; 0x01
     8e8:	33 82       	std	Z+3, r3	; 0x03
     8ea:	22 82       	std	Z+2, r2	; 0x02
     8ec:	24 83       	std	Z+4, r18	; 0x04
     8ee:	35 83       	std	Z+5, r19	; 0x05
     8f0:	46 83       	std	Z+6, r20	; 0x06
     8f2:	57 83       	std	Z+7, r21	; 0x07
     8f4:	1d c0       	rjmp	.+58     	; 0x930 <__stack+0x31>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	81 83       	std	Z+1, r24	; 0x01
     8fa:	33 82       	std	Z+3, r3	; 0x03
     8fc:	22 82       	std	Z+2, r2	; 0x02
     8fe:	88 27       	eor	r24, r24
     900:	99 27       	eor	r25, r25
     902:	dc 01       	movw	r26, r24
     904:	82 1b       	sub	r24, r18
     906:	93 0b       	sbc	r25, r19
     908:	a4 0b       	sbc	r26, r20
     90a:	b5 0b       	sbc	r27, r21
     90c:	84 83       	std	Z+4, r24	; 0x04
     90e:	95 83       	std	Z+5, r25	; 0x05
     910:	a6 83       	std	Z+6, r26	; 0x06
     912:	b7 83       	std	Z+7, r27	; 0x07
     914:	0d c0       	rjmp	.+26     	; 0x930 <__stack+0x31>
     916:	22 0f       	add	r18, r18
     918:	33 1f       	adc	r19, r19
     91a:	44 1f       	adc	r20, r20
     91c:	55 1f       	adc	r21, r21
     91e:	24 83       	std	Z+4, r18	; 0x04
     920:	35 83       	std	Z+5, r19	; 0x05
     922:	46 83       	std	Z+6, r20	; 0x06
     924:	57 83       	std	Z+7, r21	; 0x07
     926:	82 81       	ldd	r24, Z+2	; 0x02
     928:	93 81       	ldd	r25, Z+3	; 0x03
     92a:	01 97       	sbiw	r24, 0x01	; 1
     92c:	93 83       	std	Z+3, r25	; 0x03
     92e:	82 83       	std	Z+2, r24	; 0x02
     930:	24 81       	ldd	r18, Z+4	; 0x04
     932:	35 81       	ldd	r19, Z+5	; 0x05
     934:	46 81       	ldd	r20, Z+6	; 0x06
     936:	57 81       	ldd	r21, Z+7	; 0x07
     938:	da 01       	movw	r26, r20
     93a:	c9 01       	movw	r24, r18
     93c:	01 97       	sbiw	r24, 0x01	; 1
     93e:	a1 09       	sbc	r26, r1
     940:	b1 09       	sbc	r27, r1
     942:	8f 5f       	subi	r24, 0xFF	; 255
     944:	9f 4f       	sbci	r25, 0xFF	; 255
     946:	af 4f       	sbci	r26, 0xFF	; 255
     948:	bf 43       	sbci	r27, 0x3F	; 63
     94a:	28 f3       	brcs	.-54     	; 0x916 <__stack+0x17>
     94c:	0b c0       	rjmp	.+22     	; 0x964 <__stack+0x65>
     94e:	91 83       	std	Z+1, r25	; 0x01
     950:	33 82       	std	Z+3, r3	; 0x03
     952:	22 82       	std	Z+2, r2	; 0x02
     954:	ea 0c       	add	r14, r10
     956:	fb 1c       	adc	r15, r11
     958:	0c 1d       	adc	r16, r12
     95a:	1d 1d       	adc	r17, r13
     95c:	e4 82       	std	Z+4, r14	; 0x04
     95e:	f5 82       	std	Z+5, r15	; 0x05
     960:	06 83       	std	Z+6, r16	; 0x06
     962:	17 83       	std	Z+7, r17	; 0x07
     964:	83 e0       	ldi	r24, 0x03	; 3
     966:	80 83       	st	Z, r24
     968:	24 81       	ldd	r18, Z+4	; 0x04
     96a:	35 81       	ldd	r19, Z+5	; 0x05
     96c:	46 81       	ldd	r20, Z+6	; 0x06
     96e:	57 81       	ldd	r21, Z+7	; 0x07
     970:	57 ff       	sbrs	r21, 7
     972:	1a c0       	rjmp	.+52     	; 0x9a8 <__stack+0xa9>
     974:	c9 01       	movw	r24, r18
     976:	aa 27       	eor	r26, r26
     978:	97 fd       	sbrc	r25, 7
     97a:	a0 95       	com	r26
     97c:	ba 2f       	mov	r27, r26
     97e:	81 70       	andi	r24, 0x01	; 1
     980:	90 70       	andi	r25, 0x00	; 0
     982:	a0 70       	andi	r26, 0x00	; 0
     984:	b0 70       	andi	r27, 0x00	; 0
     986:	56 95       	lsr	r21
     988:	47 95       	ror	r20
     98a:	37 95       	ror	r19
     98c:	27 95       	ror	r18
     98e:	82 2b       	or	r24, r18
     990:	93 2b       	or	r25, r19
     992:	a4 2b       	or	r26, r20
     994:	b5 2b       	or	r27, r21
     996:	84 83       	std	Z+4, r24	; 0x04
     998:	95 83       	std	Z+5, r25	; 0x05
     99a:	a6 83       	std	Z+6, r26	; 0x06
     99c:	b7 83       	std	Z+7, r27	; 0x07
     99e:	82 81       	ldd	r24, Z+2	; 0x02
     9a0:	93 81       	ldd	r25, Z+3	; 0x03
     9a2:	01 96       	adiw	r24, 0x01	; 1
     9a4:	93 83       	std	Z+3, r25	; 0x03
     9a6:	82 83       	std	Z+2, r24	; 0x02
     9a8:	df 01       	movw	r26, r30
     9aa:	01 c0       	rjmp	.+2      	; 0x9ae <__stack+0xaf>
     9ac:	d2 01       	movw	r26, r4
     9ae:	cd 01       	movw	r24, r26
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
     9b4:	e2 e1       	ldi	r30, 0x12	; 18
     9b6:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__epilogue_restores__>

000009ba <__subsf3>:
     9ba:	a0 e2       	ldi	r26, 0x20	; 32
     9bc:	b0 e0       	ldi	r27, 0x00	; 0
     9be:	e3 ee       	ldi	r30, 0xE3	; 227
     9c0:	f4 e0       	ldi	r31, 0x04	; 4
     9c2:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__prologue_saves__+0x18>
     9c6:	69 83       	std	Y+1, r22	; 0x01
     9c8:	7a 83       	std	Y+2, r23	; 0x02
     9ca:	8b 83       	std	Y+3, r24	; 0x03
     9cc:	9c 83       	std	Y+4, r25	; 0x04
     9ce:	2d 83       	std	Y+5, r18	; 0x05
     9d0:	3e 83       	std	Y+6, r19	; 0x06
     9d2:	4f 83       	std	Y+7, r20	; 0x07
     9d4:	58 87       	std	Y+8, r21	; 0x08
     9d6:	e9 e0       	ldi	r30, 0x09	; 9
     9d8:	ee 2e       	mov	r14, r30
     9da:	f1 2c       	mov	r15, r1
     9dc:	ec 0e       	add	r14, r28
     9de:	fd 1e       	adc	r15, r29
     9e0:	ce 01       	movw	r24, r28
     9e2:	01 96       	adiw	r24, 0x01	; 1
     9e4:	b7 01       	movw	r22, r14
     9e6:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     9ea:	8e 01       	movw	r16, r28
     9ec:	0f 5e       	subi	r16, 0xEF	; 239
     9ee:	1f 4f       	sbci	r17, 0xFF	; 255
     9f0:	ce 01       	movw	r24, r28
     9f2:	05 96       	adiw	r24, 0x05	; 5
     9f4:	b8 01       	movw	r22, r16
     9f6:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     9fa:	8a 89       	ldd	r24, Y+18	; 0x12
     9fc:	91 e0       	ldi	r25, 0x01	; 1
     9fe:	89 27       	eor	r24, r25
     a00:	8a 8b       	std	Y+18, r24	; 0x12
     a02:	c7 01       	movw	r24, r14
     a04:	b8 01       	movw	r22, r16
     a06:	ae 01       	movw	r20, r28
     a08:	47 5e       	subi	r20, 0xE7	; 231
     a0a:	5f 4f       	sbci	r21, 0xFF	; 255
     a0c:	0e 94 91 03 	call	0x722	; 0x722 <_fpadd_parts>
     a10:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__pack_f>
     a14:	a0 96       	adiw	r28, 0x20	; 32
     a16:	e6 e0       	ldi	r30, 0x06	; 6
     a18:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__epilogue_restores__+0x18>

00000a1c <__addsf3>:
     a1c:	a0 e2       	ldi	r26, 0x20	; 32
     a1e:	b0 e0       	ldi	r27, 0x00	; 0
     a20:	e4 e1       	ldi	r30, 0x14	; 20
     a22:	f5 e0       	ldi	r31, 0x05	; 5
     a24:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__prologue_saves__+0x18>
     a28:	69 83       	std	Y+1, r22	; 0x01
     a2a:	7a 83       	std	Y+2, r23	; 0x02
     a2c:	8b 83       	std	Y+3, r24	; 0x03
     a2e:	9c 83       	std	Y+4, r25	; 0x04
     a30:	2d 83       	std	Y+5, r18	; 0x05
     a32:	3e 83       	std	Y+6, r19	; 0x06
     a34:	4f 83       	std	Y+7, r20	; 0x07
     a36:	58 87       	std	Y+8, r21	; 0x08
     a38:	f9 e0       	ldi	r31, 0x09	; 9
     a3a:	ef 2e       	mov	r14, r31
     a3c:	f1 2c       	mov	r15, r1
     a3e:	ec 0e       	add	r14, r28
     a40:	fd 1e       	adc	r15, r29
     a42:	ce 01       	movw	r24, r28
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	b7 01       	movw	r22, r14
     a48:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     a4c:	8e 01       	movw	r16, r28
     a4e:	0f 5e       	subi	r16, 0xEF	; 239
     a50:	1f 4f       	sbci	r17, 0xFF	; 255
     a52:	ce 01       	movw	r24, r28
     a54:	05 96       	adiw	r24, 0x05	; 5
     a56:	b8 01       	movw	r22, r16
     a58:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     a5c:	c7 01       	movw	r24, r14
     a5e:	b8 01       	movw	r22, r16
     a60:	ae 01       	movw	r20, r28
     a62:	47 5e       	subi	r20, 0xE7	; 231
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	0e 94 91 03 	call	0x722	; 0x722 <_fpadd_parts>
     a6a:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__pack_f>
     a6e:	a0 96       	adiw	r28, 0x20	; 32
     a70:	e6 e0       	ldi	r30, 0x06	; 6
     a72:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__epilogue_restores__+0x18>

00000a76 <__mulsf3>:
     a76:	a0 e2       	ldi	r26, 0x20	; 32
     a78:	b0 e0       	ldi	r27, 0x00	; 0
     a7a:	e1 e4       	ldi	r30, 0x41	; 65
     a7c:	f5 e0       	ldi	r31, 0x05	; 5
     a7e:	0c 94 6c 09 	jmp	0x12d8	; 0x12d8 <__prologue_saves__>
     a82:	69 83       	std	Y+1, r22	; 0x01
     a84:	7a 83       	std	Y+2, r23	; 0x02
     a86:	8b 83       	std	Y+3, r24	; 0x03
     a88:	9c 83       	std	Y+4, r25	; 0x04
     a8a:	2d 83       	std	Y+5, r18	; 0x05
     a8c:	3e 83       	std	Y+6, r19	; 0x06
     a8e:	4f 83       	std	Y+7, r20	; 0x07
     a90:	58 87       	std	Y+8, r21	; 0x08
     a92:	ce 01       	movw	r24, r28
     a94:	01 96       	adiw	r24, 0x01	; 1
     a96:	be 01       	movw	r22, r28
     a98:	67 5f       	subi	r22, 0xF7	; 247
     a9a:	7f 4f       	sbci	r23, 0xFF	; 255
     a9c:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     aa0:	ce 01       	movw	r24, r28
     aa2:	05 96       	adiw	r24, 0x05	; 5
     aa4:	be 01       	movw	r22, r28
     aa6:	6f 5e       	subi	r22, 0xEF	; 239
     aa8:	7f 4f       	sbci	r23, 0xFF	; 255
     aaa:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     aae:	99 85       	ldd	r25, Y+9	; 0x09
     ab0:	92 30       	cpi	r25, 0x02	; 2
     ab2:	88 f0       	brcs	.+34     	; 0xad6 <__mulsf3+0x60>
     ab4:	89 89       	ldd	r24, Y+17	; 0x11
     ab6:	82 30       	cpi	r24, 0x02	; 2
     ab8:	c8 f0       	brcs	.+50     	; 0xaec <__mulsf3+0x76>
     aba:	94 30       	cpi	r25, 0x04	; 4
     abc:	19 f4       	brne	.+6      	; 0xac4 <__mulsf3+0x4e>
     abe:	82 30       	cpi	r24, 0x02	; 2
     ac0:	51 f4       	brne	.+20     	; 0xad6 <__mulsf3+0x60>
     ac2:	04 c0       	rjmp	.+8      	; 0xacc <__mulsf3+0x56>
     ac4:	84 30       	cpi	r24, 0x04	; 4
     ac6:	29 f4       	brne	.+10     	; 0xad2 <__mulsf3+0x5c>
     ac8:	92 30       	cpi	r25, 0x02	; 2
     aca:	81 f4       	brne	.+32     	; 0xaec <__mulsf3+0x76>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	c6 c0       	rjmp	.+396    	; 0xc5e <__mulsf3+0x1e8>
     ad2:	92 30       	cpi	r25, 0x02	; 2
     ad4:	49 f4       	brne	.+18     	; 0xae8 <__mulsf3+0x72>
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	9a 85       	ldd	r25, Y+10	; 0x0a
     ada:	8a 89       	ldd	r24, Y+18	; 0x12
     adc:	98 13       	cpse	r25, r24
     ade:	21 e0       	ldi	r18, 0x01	; 1
     ae0:	2a 87       	std	Y+10, r18	; 0x0a
     ae2:	ce 01       	movw	r24, r28
     ae4:	09 96       	adiw	r24, 0x09	; 9
     ae6:	bb c0       	rjmp	.+374    	; 0xc5e <__mulsf3+0x1e8>
     ae8:	82 30       	cpi	r24, 0x02	; 2
     aea:	49 f4       	brne	.+18     	; 0xafe <__mulsf3+0x88>
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	9a 85       	ldd	r25, Y+10	; 0x0a
     af0:	8a 89       	ldd	r24, Y+18	; 0x12
     af2:	98 13       	cpse	r25, r24
     af4:	21 e0       	ldi	r18, 0x01	; 1
     af6:	2a 8b       	std	Y+18, r18	; 0x12
     af8:	ce 01       	movw	r24, r28
     afa:	41 96       	adiw	r24, 0x11	; 17
     afc:	b0 c0       	rjmp	.+352    	; 0xc5e <__mulsf3+0x1e8>
     afe:	2d 84       	ldd	r2, Y+13	; 0x0d
     b00:	3e 84       	ldd	r3, Y+14	; 0x0e
     b02:	4f 84       	ldd	r4, Y+15	; 0x0f
     b04:	58 88       	ldd	r5, Y+16	; 0x10
     b06:	6d 88       	ldd	r6, Y+21	; 0x15
     b08:	7e 88       	ldd	r7, Y+22	; 0x16
     b0a:	8f 88       	ldd	r8, Y+23	; 0x17
     b0c:	98 8c       	ldd	r9, Y+24	; 0x18
     b0e:	ee 24       	eor	r14, r14
     b10:	ff 24       	eor	r15, r15
     b12:	87 01       	movw	r16, r14
     b14:	aa 24       	eor	r10, r10
     b16:	bb 24       	eor	r11, r11
     b18:	65 01       	movw	r12, r10
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	60 e0       	ldi	r22, 0x00	; 0
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	e0 e0       	ldi	r30, 0x00	; 0
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	c1 01       	movw	r24, r2
     b28:	81 70       	andi	r24, 0x01	; 1
     b2a:	90 70       	andi	r25, 0x00	; 0
     b2c:	89 2b       	or	r24, r25
     b2e:	e9 f0       	breq	.+58     	; 0xb6a <__mulsf3+0xf4>
     b30:	e6 0c       	add	r14, r6
     b32:	f7 1c       	adc	r15, r7
     b34:	08 1d       	adc	r16, r8
     b36:	19 1d       	adc	r17, r9
     b38:	9a 01       	movw	r18, r20
     b3a:	ab 01       	movw	r20, r22
     b3c:	2a 0d       	add	r18, r10
     b3e:	3b 1d       	adc	r19, r11
     b40:	4c 1d       	adc	r20, r12
     b42:	5d 1d       	adc	r21, r13
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	a0 e0       	ldi	r26, 0x00	; 0
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	e6 14       	cp	r14, r6
     b4e:	f7 04       	cpc	r15, r7
     b50:	08 05       	cpc	r16, r8
     b52:	19 05       	cpc	r17, r9
     b54:	20 f4       	brcc	.+8      	; 0xb5e <__mulsf3+0xe8>
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	a0 e0       	ldi	r26, 0x00	; 0
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	ba 01       	movw	r22, r20
     b60:	a9 01       	movw	r20, r18
     b62:	48 0f       	add	r20, r24
     b64:	59 1f       	adc	r21, r25
     b66:	6a 1f       	adc	r22, r26
     b68:	7b 1f       	adc	r23, r27
     b6a:	aa 0c       	add	r10, r10
     b6c:	bb 1c       	adc	r11, r11
     b6e:	cc 1c       	adc	r12, r12
     b70:	dd 1c       	adc	r13, r13
     b72:	97 fe       	sbrs	r9, 7
     b74:	08 c0       	rjmp	.+16     	; 0xb86 <__mulsf3+0x110>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	a0 e0       	ldi	r26, 0x00	; 0
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	a8 2a       	or	r10, r24
     b80:	b9 2a       	or	r11, r25
     b82:	ca 2a       	or	r12, r26
     b84:	db 2a       	or	r13, r27
     b86:	31 96       	adiw	r30, 0x01	; 1
     b88:	e0 32       	cpi	r30, 0x20	; 32
     b8a:	f1 05       	cpc	r31, r1
     b8c:	49 f0       	breq	.+18     	; 0xba0 <__mulsf3+0x12a>
     b8e:	66 0c       	add	r6, r6
     b90:	77 1c       	adc	r7, r7
     b92:	88 1c       	adc	r8, r8
     b94:	99 1c       	adc	r9, r9
     b96:	56 94       	lsr	r5
     b98:	47 94       	ror	r4
     b9a:	37 94       	ror	r3
     b9c:	27 94       	ror	r2
     b9e:	c3 cf       	rjmp	.-122    	; 0xb26 <__mulsf3+0xb0>
     ba0:	fa 85       	ldd	r31, Y+10	; 0x0a
     ba2:	ea 89       	ldd	r30, Y+18	; 0x12
     ba4:	2b 89       	ldd	r18, Y+19	; 0x13
     ba6:	3c 89       	ldd	r19, Y+20	; 0x14
     ba8:	8b 85       	ldd	r24, Y+11	; 0x0b
     baa:	9c 85       	ldd	r25, Y+12	; 0x0c
     bac:	28 0f       	add	r18, r24
     bae:	39 1f       	adc	r19, r25
     bb0:	2e 5f       	subi	r18, 0xFE	; 254
     bb2:	3f 4f       	sbci	r19, 0xFF	; 255
     bb4:	17 c0       	rjmp	.+46     	; 0xbe4 <__mulsf3+0x16e>
     bb6:	ca 01       	movw	r24, r20
     bb8:	81 70       	andi	r24, 0x01	; 1
     bba:	90 70       	andi	r25, 0x00	; 0
     bbc:	89 2b       	or	r24, r25
     bbe:	61 f0       	breq	.+24     	; 0xbd8 <__mulsf3+0x162>
     bc0:	16 95       	lsr	r17
     bc2:	07 95       	ror	r16
     bc4:	f7 94       	ror	r15
     bc6:	e7 94       	ror	r14
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	a0 e0       	ldi	r26, 0x00	; 0
     bce:	b0 e8       	ldi	r27, 0x80	; 128
     bd0:	e8 2a       	or	r14, r24
     bd2:	f9 2a       	or	r15, r25
     bd4:	0a 2b       	or	r16, r26
     bd6:	1b 2b       	or	r17, r27
     bd8:	76 95       	lsr	r23
     bda:	67 95       	ror	r22
     bdc:	57 95       	ror	r21
     bde:	47 95       	ror	r20
     be0:	2f 5f       	subi	r18, 0xFF	; 255
     be2:	3f 4f       	sbci	r19, 0xFF	; 255
     be4:	77 fd       	sbrc	r23, 7
     be6:	e7 cf       	rjmp	.-50     	; 0xbb6 <__mulsf3+0x140>
     be8:	0c c0       	rjmp	.+24     	; 0xc02 <__mulsf3+0x18c>
     bea:	44 0f       	add	r20, r20
     bec:	55 1f       	adc	r21, r21
     bee:	66 1f       	adc	r22, r22
     bf0:	77 1f       	adc	r23, r23
     bf2:	17 fd       	sbrc	r17, 7
     bf4:	41 60       	ori	r20, 0x01	; 1
     bf6:	ee 0c       	add	r14, r14
     bf8:	ff 1c       	adc	r15, r15
     bfa:	00 1f       	adc	r16, r16
     bfc:	11 1f       	adc	r17, r17
     bfe:	21 50       	subi	r18, 0x01	; 1
     c00:	30 40       	sbci	r19, 0x00	; 0
     c02:	40 30       	cpi	r20, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	59 07       	cpc	r21, r25
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	69 07       	cpc	r22, r25
     c0c:	90 e4       	ldi	r25, 0x40	; 64
     c0e:	79 07       	cpc	r23, r25
     c10:	60 f3       	brcs	.-40     	; 0xbea <__mulsf3+0x174>
     c12:	2b 8f       	std	Y+27, r18	; 0x1b
     c14:	3c 8f       	std	Y+28, r19	; 0x1c
     c16:	db 01       	movw	r26, r22
     c18:	ca 01       	movw	r24, r20
     c1a:	8f 77       	andi	r24, 0x7F	; 127
     c1c:	90 70       	andi	r25, 0x00	; 0
     c1e:	a0 70       	andi	r26, 0x00	; 0
     c20:	b0 70       	andi	r27, 0x00	; 0
     c22:	80 34       	cpi	r24, 0x40	; 64
     c24:	91 05       	cpc	r25, r1
     c26:	a1 05       	cpc	r26, r1
     c28:	b1 05       	cpc	r27, r1
     c2a:	61 f4       	brne	.+24     	; 0xc44 <__mulsf3+0x1ce>
     c2c:	47 fd       	sbrc	r20, 7
     c2e:	0a c0       	rjmp	.+20     	; 0xc44 <__mulsf3+0x1ce>
     c30:	e1 14       	cp	r14, r1
     c32:	f1 04       	cpc	r15, r1
     c34:	01 05       	cpc	r16, r1
     c36:	11 05       	cpc	r17, r1
     c38:	29 f0       	breq	.+10     	; 0xc44 <__mulsf3+0x1ce>
     c3a:	40 5c       	subi	r20, 0xC0	; 192
     c3c:	5f 4f       	sbci	r21, 0xFF	; 255
     c3e:	6f 4f       	sbci	r22, 0xFF	; 255
     c40:	7f 4f       	sbci	r23, 0xFF	; 255
     c42:	40 78       	andi	r20, 0x80	; 128
     c44:	1a 8e       	std	Y+26, r1	; 0x1a
     c46:	fe 17       	cp	r31, r30
     c48:	11 f0       	breq	.+4      	; 0xc4e <__mulsf3+0x1d8>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	8a 8f       	std	Y+26, r24	; 0x1a
     c4e:	4d 8f       	std	Y+29, r20	; 0x1d
     c50:	5e 8f       	std	Y+30, r21	; 0x1e
     c52:	6f 8f       	std	Y+31, r22	; 0x1f
     c54:	78 a3       	std	Y+32, r23	; 0x20
     c56:	83 e0       	ldi	r24, 0x03	; 3
     c58:	89 8f       	std	Y+25, r24	; 0x19
     c5a:	ce 01       	movw	r24, r28
     c5c:	49 96       	adiw	r24, 0x19	; 25
     c5e:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__pack_f>
     c62:	a0 96       	adiw	r28, 0x20	; 32
     c64:	e2 e1       	ldi	r30, 0x12	; 18
     c66:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__epilogue_restores__>

00000c6a <__gtsf2>:
     c6a:	a8 e1       	ldi	r26, 0x18	; 24
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	eb e3       	ldi	r30, 0x3B	; 59
     c70:	f6 e0       	ldi	r31, 0x06	; 6
     c72:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__prologue_saves__+0x18>
     c76:	69 83       	std	Y+1, r22	; 0x01
     c78:	7a 83       	std	Y+2, r23	; 0x02
     c7a:	8b 83       	std	Y+3, r24	; 0x03
     c7c:	9c 83       	std	Y+4, r25	; 0x04
     c7e:	2d 83       	std	Y+5, r18	; 0x05
     c80:	3e 83       	std	Y+6, r19	; 0x06
     c82:	4f 83       	std	Y+7, r20	; 0x07
     c84:	58 87       	std	Y+8, r21	; 0x08
     c86:	89 e0       	ldi	r24, 0x09	; 9
     c88:	e8 2e       	mov	r14, r24
     c8a:	f1 2c       	mov	r15, r1
     c8c:	ec 0e       	add	r14, r28
     c8e:	fd 1e       	adc	r15, r29
     c90:	ce 01       	movw	r24, r28
     c92:	01 96       	adiw	r24, 0x01	; 1
     c94:	b7 01       	movw	r22, r14
     c96:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     c9a:	8e 01       	movw	r16, r28
     c9c:	0f 5e       	subi	r16, 0xEF	; 239
     c9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ca0:	ce 01       	movw	r24, r28
     ca2:	05 96       	adiw	r24, 0x05	; 5
     ca4:	b8 01       	movw	r22, r16
     ca6:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     caa:	89 85       	ldd	r24, Y+9	; 0x09
     cac:	82 30       	cpi	r24, 0x02	; 2
     cae:	40 f0       	brcs	.+16     	; 0xcc0 <__gtsf2+0x56>
     cb0:	89 89       	ldd	r24, Y+17	; 0x11
     cb2:	82 30       	cpi	r24, 0x02	; 2
     cb4:	28 f0       	brcs	.+10     	; 0xcc0 <__gtsf2+0x56>
     cb6:	c7 01       	movw	r24, r14
     cb8:	b8 01       	movw	r22, r16
     cba:	0e 94 13 09 	call	0x1226	; 0x1226 <__fpcmp_parts_f>
     cbe:	01 c0       	rjmp	.+2      	; 0xcc2 <__gtsf2+0x58>
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	68 96       	adiw	r28, 0x18	; 24
     cc4:	e6 e0       	ldi	r30, 0x06	; 6
     cc6:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__epilogue_restores__+0x18>

00000cca <__gesf2>:
     cca:	a8 e1       	ldi	r26, 0x18	; 24
     ccc:	b0 e0       	ldi	r27, 0x00	; 0
     cce:	eb e6       	ldi	r30, 0x6B	; 107
     cd0:	f6 e0       	ldi	r31, 0x06	; 6
     cd2:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__prologue_saves__+0x18>
     cd6:	69 83       	std	Y+1, r22	; 0x01
     cd8:	7a 83       	std	Y+2, r23	; 0x02
     cda:	8b 83       	std	Y+3, r24	; 0x03
     cdc:	9c 83       	std	Y+4, r25	; 0x04
     cde:	2d 83       	std	Y+5, r18	; 0x05
     ce0:	3e 83       	std	Y+6, r19	; 0x06
     ce2:	4f 83       	std	Y+7, r20	; 0x07
     ce4:	58 87       	std	Y+8, r21	; 0x08
     ce6:	89 e0       	ldi	r24, 0x09	; 9
     ce8:	e8 2e       	mov	r14, r24
     cea:	f1 2c       	mov	r15, r1
     cec:	ec 0e       	add	r14, r28
     cee:	fd 1e       	adc	r15, r29
     cf0:	ce 01       	movw	r24, r28
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	b7 01       	movw	r22, r14
     cf6:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     cfa:	8e 01       	movw	r16, r28
     cfc:	0f 5e       	subi	r16, 0xEF	; 239
     cfe:	1f 4f       	sbci	r17, 0xFF	; 255
     d00:	ce 01       	movw	r24, r28
     d02:	05 96       	adiw	r24, 0x05	; 5
     d04:	b8 01       	movw	r22, r16
     d06:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     d0a:	89 85       	ldd	r24, Y+9	; 0x09
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	40 f0       	brcs	.+16     	; 0xd20 <__gesf2+0x56>
     d10:	89 89       	ldd	r24, Y+17	; 0x11
     d12:	82 30       	cpi	r24, 0x02	; 2
     d14:	28 f0       	brcs	.+10     	; 0xd20 <__gesf2+0x56>
     d16:	c7 01       	movw	r24, r14
     d18:	b8 01       	movw	r22, r16
     d1a:	0e 94 13 09 	call	0x1226	; 0x1226 <__fpcmp_parts_f>
     d1e:	01 c0       	rjmp	.+2      	; 0xd22 <__gesf2+0x58>
     d20:	8f ef       	ldi	r24, 0xFF	; 255
     d22:	68 96       	adiw	r28, 0x18	; 24
     d24:	e6 e0       	ldi	r30, 0x06	; 6
     d26:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__epilogue_restores__+0x18>

00000d2a <__ltsf2>:
     d2a:	a8 e1       	ldi	r26, 0x18	; 24
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	eb e9       	ldi	r30, 0x9B	; 155
     d30:	f6 e0       	ldi	r31, 0x06	; 6
     d32:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__prologue_saves__+0x18>
     d36:	69 83       	std	Y+1, r22	; 0x01
     d38:	7a 83       	std	Y+2, r23	; 0x02
     d3a:	8b 83       	std	Y+3, r24	; 0x03
     d3c:	9c 83       	std	Y+4, r25	; 0x04
     d3e:	2d 83       	std	Y+5, r18	; 0x05
     d40:	3e 83       	std	Y+6, r19	; 0x06
     d42:	4f 83       	std	Y+7, r20	; 0x07
     d44:	58 87       	std	Y+8, r21	; 0x08
     d46:	89 e0       	ldi	r24, 0x09	; 9
     d48:	e8 2e       	mov	r14, r24
     d4a:	f1 2c       	mov	r15, r1
     d4c:	ec 0e       	add	r14, r28
     d4e:	fd 1e       	adc	r15, r29
     d50:	ce 01       	movw	r24, r28
     d52:	01 96       	adiw	r24, 0x01	; 1
     d54:	b7 01       	movw	r22, r14
     d56:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     d5a:	8e 01       	movw	r16, r28
     d5c:	0f 5e       	subi	r16, 0xEF	; 239
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	ce 01       	movw	r24, r28
     d62:	05 96       	adiw	r24, 0x05	; 5
     d64:	b8 01       	movw	r22, r16
     d66:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     d6a:	89 85       	ldd	r24, Y+9	; 0x09
     d6c:	82 30       	cpi	r24, 0x02	; 2
     d6e:	40 f0       	brcs	.+16     	; 0xd80 <__ltsf2+0x56>
     d70:	89 89       	ldd	r24, Y+17	; 0x11
     d72:	82 30       	cpi	r24, 0x02	; 2
     d74:	28 f0       	brcs	.+10     	; 0xd80 <__ltsf2+0x56>
     d76:	c7 01       	movw	r24, r14
     d78:	b8 01       	movw	r22, r16
     d7a:	0e 94 13 09 	call	0x1226	; 0x1226 <__fpcmp_parts_f>
     d7e:	01 c0       	rjmp	.+2      	; 0xd82 <__ltsf2+0x58>
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	68 96       	adiw	r28, 0x18	; 24
     d84:	e6 e0       	ldi	r30, 0x06	; 6
     d86:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__epilogue_restores__+0x18>

00000d8a <__floatsisf>:
     d8a:	a8 e0       	ldi	r26, 0x08	; 8
     d8c:	b0 e0       	ldi	r27, 0x00	; 0
     d8e:	eb ec       	ldi	r30, 0xCB	; 203
     d90:	f6 e0       	ldi	r31, 0x06	; 6
     d92:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__prologue_saves__+0x12>
     d96:	9b 01       	movw	r18, r22
     d98:	ac 01       	movw	r20, r24
     d9a:	83 e0       	ldi	r24, 0x03	; 3
     d9c:	89 83       	std	Y+1, r24	; 0x01
     d9e:	da 01       	movw	r26, r20
     da0:	c9 01       	movw	r24, r18
     da2:	88 27       	eor	r24, r24
     da4:	b7 fd       	sbrc	r27, 7
     da6:	83 95       	inc	r24
     da8:	99 27       	eor	r25, r25
     daa:	aa 27       	eor	r26, r26
     dac:	bb 27       	eor	r27, r27
     dae:	b8 2e       	mov	r11, r24
     db0:	21 15       	cp	r18, r1
     db2:	31 05       	cpc	r19, r1
     db4:	41 05       	cpc	r20, r1
     db6:	51 05       	cpc	r21, r1
     db8:	19 f4       	brne	.+6      	; 0xdc0 <__floatsisf+0x36>
     dba:	82 e0       	ldi	r24, 0x02	; 2
     dbc:	89 83       	std	Y+1, r24	; 0x01
     dbe:	3a c0       	rjmp	.+116    	; 0xe34 <__floatsisf+0xaa>
     dc0:	88 23       	and	r24, r24
     dc2:	a9 f0       	breq	.+42     	; 0xdee <__floatsisf+0x64>
     dc4:	20 30       	cpi	r18, 0x00	; 0
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	38 07       	cpc	r19, r24
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	48 07       	cpc	r20, r24
     dce:	80 e8       	ldi	r24, 0x80	; 128
     dd0:	58 07       	cpc	r21, r24
     dd2:	29 f4       	brne	.+10     	; 0xdde <__floatsisf+0x54>
     dd4:	60 e0       	ldi	r22, 0x00	; 0
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	80 e0       	ldi	r24, 0x00	; 0
     dda:	9f ec       	ldi	r25, 0xCF	; 207
     ddc:	30 c0       	rjmp	.+96     	; 0xe3e <__floatsisf+0xb4>
     dde:	ee 24       	eor	r14, r14
     de0:	ff 24       	eor	r15, r15
     de2:	87 01       	movw	r16, r14
     de4:	e2 1a       	sub	r14, r18
     de6:	f3 0a       	sbc	r15, r19
     de8:	04 0b       	sbc	r16, r20
     dea:	15 0b       	sbc	r17, r21
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <__floatsisf+0x68>
     dee:	79 01       	movw	r14, r18
     df0:	8a 01       	movw	r16, r20
     df2:	8e e1       	ldi	r24, 0x1E	; 30
     df4:	c8 2e       	mov	r12, r24
     df6:	d1 2c       	mov	r13, r1
     df8:	dc 82       	std	Y+4, r13	; 0x04
     dfa:	cb 82       	std	Y+3, r12	; 0x03
     dfc:	ed 82       	std	Y+5, r14	; 0x05
     dfe:	fe 82       	std	Y+6, r15	; 0x06
     e00:	0f 83       	std	Y+7, r16	; 0x07
     e02:	18 87       	std	Y+8, r17	; 0x08
     e04:	c8 01       	movw	r24, r16
     e06:	b7 01       	movw	r22, r14
     e08:	0e 94 77 07 	call	0xeee	; 0xeee <__clzsi2>
     e0c:	01 97       	sbiw	r24, 0x01	; 1
     e0e:	18 16       	cp	r1, r24
     e10:	19 06       	cpc	r1, r25
     e12:	84 f4       	brge	.+32     	; 0xe34 <__floatsisf+0xaa>
     e14:	08 2e       	mov	r0, r24
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <__floatsisf+0x96>
     e18:	ee 0c       	add	r14, r14
     e1a:	ff 1c       	adc	r15, r15
     e1c:	00 1f       	adc	r16, r16
     e1e:	11 1f       	adc	r17, r17
     e20:	0a 94       	dec	r0
     e22:	d2 f7       	brpl	.-12     	; 0xe18 <__floatsisf+0x8e>
     e24:	ed 82       	std	Y+5, r14	; 0x05
     e26:	fe 82       	std	Y+6, r15	; 0x06
     e28:	0f 83       	std	Y+7, r16	; 0x07
     e2a:	18 87       	std	Y+8, r17	; 0x08
     e2c:	c8 1a       	sub	r12, r24
     e2e:	d9 0a       	sbc	r13, r25
     e30:	dc 82       	std	Y+4, r13	; 0x04
     e32:	cb 82       	std	Y+3, r12	; 0x03
     e34:	ba 82       	std	Y+2, r11	; 0x02
     e36:	ce 01       	movw	r24, r28
     e38:	01 96       	adiw	r24, 0x01	; 1
     e3a:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__pack_f>
     e3e:	28 96       	adiw	r28, 0x08	; 8
     e40:	e9 e0       	ldi	r30, 0x09	; 9
     e42:	0c 94 91 09 	jmp	0x1322	; 0x1322 <__epilogue_restores__+0x12>

00000e46 <__fixsfsi>:
     e46:	ac e0       	ldi	r26, 0x0C	; 12
     e48:	b0 e0       	ldi	r27, 0x00	; 0
     e4a:	e9 e2       	ldi	r30, 0x29	; 41
     e4c:	f7 e0       	ldi	r31, 0x07	; 7
     e4e:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x20>
     e52:	69 83       	std	Y+1, r22	; 0x01
     e54:	7a 83       	std	Y+2, r23	; 0x02
     e56:	8b 83       	std	Y+3, r24	; 0x03
     e58:	9c 83       	std	Y+4, r25	; 0x04
     e5a:	ce 01       	movw	r24, r28
     e5c:	01 96       	adiw	r24, 0x01	; 1
     e5e:	be 01       	movw	r22, r28
     e60:	6b 5f       	subi	r22, 0xFB	; 251
     e62:	7f 4f       	sbci	r23, 0xFF	; 255
     e64:	0e 94 9b 08 	call	0x1136	; 0x1136 <__unpack_f>
     e68:	8d 81       	ldd	r24, Y+5	; 0x05
     e6a:	82 30       	cpi	r24, 0x02	; 2
     e6c:	61 f1       	breq	.+88     	; 0xec6 <__fixsfsi+0x80>
     e6e:	82 30       	cpi	r24, 0x02	; 2
     e70:	50 f1       	brcs	.+84     	; 0xec6 <__fixsfsi+0x80>
     e72:	84 30       	cpi	r24, 0x04	; 4
     e74:	21 f4       	brne	.+8      	; 0xe7e <__fixsfsi+0x38>
     e76:	8e 81       	ldd	r24, Y+6	; 0x06
     e78:	88 23       	and	r24, r24
     e7a:	51 f1       	breq	.+84     	; 0xed0 <__fixsfsi+0x8a>
     e7c:	2e c0       	rjmp	.+92     	; 0xeda <__fixsfsi+0x94>
     e7e:	2f 81       	ldd	r18, Y+7	; 0x07
     e80:	38 85       	ldd	r19, Y+8	; 0x08
     e82:	37 fd       	sbrc	r19, 7
     e84:	20 c0       	rjmp	.+64     	; 0xec6 <__fixsfsi+0x80>
     e86:	6e 81       	ldd	r22, Y+6	; 0x06
     e88:	2f 31       	cpi	r18, 0x1F	; 31
     e8a:	31 05       	cpc	r19, r1
     e8c:	1c f0       	brlt	.+6      	; 0xe94 <__fixsfsi+0x4e>
     e8e:	66 23       	and	r22, r22
     e90:	f9 f0       	breq	.+62     	; 0xed0 <__fixsfsi+0x8a>
     e92:	23 c0       	rjmp	.+70     	; 0xeda <__fixsfsi+0x94>
     e94:	8e e1       	ldi	r24, 0x1E	; 30
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	82 1b       	sub	r24, r18
     e9a:	93 0b       	sbc	r25, r19
     e9c:	29 85       	ldd	r18, Y+9	; 0x09
     e9e:	3a 85       	ldd	r19, Y+10	; 0x0a
     ea0:	4b 85       	ldd	r20, Y+11	; 0x0b
     ea2:	5c 85       	ldd	r21, Y+12	; 0x0c
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <__fixsfsi+0x68>
     ea6:	56 95       	lsr	r21
     ea8:	47 95       	ror	r20
     eaa:	37 95       	ror	r19
     eac:	27 95       	ror	r18
     eae:	8a 95       	dec	r24
     eb0:	d2 f7       	brpl	.-12     	; 0xea6 <__fixsfsi+0x60>
     eb2:	66 23       	and	r22, r22
     eb4:	b1 f0       	breq	.+44     	; 0xee2 <__fixsfsi+0x9c>
     eb6:	50 95       	com	r21
     eb8:	40 95       	com	r20
     eba:	30 95       	com	r19
     ebc:	21 95       	neg	r18
     ebe:	3f 4f       	sbci	r19, 0xFF	; 255
     ec0:	4f 4f       	sbci	r20, 0xFF	; 255
     ec2:	5f 4f       	sbci	r21, 0xFF	; 255
     ec4:	0e c0       	rjmp	.+28     	; 0xee2 <__fixsfsi+0x9c>
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e0       	ldi	r20, 0x00	; 0
     ecc:	50 e0       	ldi	r21, 0x00	; 0
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <__fixsfsi+0x9c>
     ed0:	2f ef       	ldi	r18, 0xFF	; 255
     ed2:	3f ef       	ldi	r19, 0xFF	; 255
     ed4:	4f ef       	ldi	r20, 0xFF	; 255
     ed6:	5f e7       	ldi	r21, 0x7F	; 127
     ed8:	04 c0       	rjmp	.+8      	; 0xee2 <__fixsfsi+0x9c>
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	40 e0       	ldi	r20, 0x00	; 0
     ee0:	50 e8       	ldi	r21, 0x80	; 128
     ee2:	b9 01       	movw	r22, r18
     ee4:	ca 01       	movw	r24, r20
     ee6:	2c 96       	adiw	r28, 0x0c	; 12
     ee8:	e2 e0       	ldi	r30, 0x02	; 2
     eea:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x20>

00000eee <__clzsi2>:
     eee:	ef 92       	push	r14
     ef0:	ff 92       	push	r15
     ef2:	0f 93       	push	r16
     ef4:	1f 93       	push	r17
     ef6:	7b 01       	movw	r14, r22
     ef8:	8c 01       	movw	r16, r24
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	e8 16       	cp	r14, r24
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	f8 06       	cpc	r15, r24
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	08 07       	cpc	r16, r24
     f06:	80 e0       	ldi	r24, 0x00	; 0
     f08:	18 07       	cpc	r17, r24
     f0a:	88 f4       	brcc	.+34     	; 0xf2e <__clzsi2+0x40>
     f0c:	8f ef       	ldi	r24, 0xFF	; 255
     f0e:	e8 16       	cp	r14, r24
     f10:	f1 04       	cpc	r15, r1
     f12:	01 05       	cpc	r16, r1
     f14:	11 05       	cpc	r17, r1
     f16:	31 f0       	breq	.+12     	; 0xf24 <__clzsi2+0x36>
     f18:	28 f0       	brcs	.+10     	; 0xf24 <__clzsi2+0x36>
     f1a:	88 e0       	ldi	r24, 0x08	; 8
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	a0 e0       	ldi	r26, 0x00	; 0
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	17 c0       	rjmp	.+46     	; 0xf52 <__clzsi2+0x64>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	12 c0       	rjmp	.+36     	; 0xf52 <__clzsi2+0x64>
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	e8 16       	cp	r14, r24
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	f8 06       	cpc	r15, r24
     f36:	80 e0       	ldi	r24, 0x00	; 0
     f38:	08 07       	cpc	r16, r24
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	18 07       	cpc	r17, r24
     f3e:	28 f0       	brcs	.+10     	; 0xf4a <__clzsi2+0x5c>
     f40:	88 e1       	ldi	r24, 0x18	; 24
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	04 c0       	rjmp	.+8      	; 0xf52 <__clzsi2+0x64>
     f4a:	80 e1       	ldi	r24, 0x10	; 16
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	a0 e0       	ldi	r26, 0x00	; 0
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	20 e2       	ldi	r18, 0x20	; 32
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	40 e0       	ldi	r20, 0x00	; 0
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	28 1b       	sub	r18, r24
     f5c:	39 0b       	sbc	r19, r25
     f5e:	4a 0b       	sbc	r20, r26
     f60:	5b 0b       	sbc	r21, r27
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__clzsi2+0x7e>
     f64:	16 95       	lsr	r17
     f66:	07 95       	ror	r16
     f68:	f7 94       	ror	r15
     f6a:	e7 94       	ror	r14
     f6c:	8a 95       	dec	r24
     f6e:	d2 f7       	brpl	.-12     	; 0xf64 <__clzsi2+0x76>
     f70:	f7 01       	movw	r30, r14
     f72:	e8 5f       	subi	r30, 0xF8	; 248
     f74:	fe 4f       	sbci	r31, 0xFE	; 254
     f76:	80 81       	ld	r24, Z
     f78:	28 1b       	sub	r18, r24
     f7a:	31 09       	sbc	r19, r1
     f7c:	41 09       	sbc	r20, r1
     f7e:	51 09       	sbc	r21, r1
     f80:	c9 01       	movw	r24, r18
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	ff 90       	pop	r15
     f88:	ef 90       	pop	r14
     f8a:	08 95       	ret

00000f8c <__pack_f>:
     f8c:	df 92       	push	r13
     f8e:	ef 92       	push	r14
     f90:	ff 92       	push	r15
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	fc 01       	movw	r30, r24
     f98:	e4 80       	ldd	r14, Z+4	; 0x04
     f9a:	f5 80       	ldd	r15, Z+5	; 0x05
     f9c:	06 81       	ldd	r16, Z+6	; 0x06
     f9e:	17 81       	ldd	r17, Z+7	; 0x07
     fa0:	d1 80       	ldd	r13, Z+1	; 0x01
     fa2:	80 81       	ld	r24, Z
     fa4:	82 30       	cpi	r24, 0x02	; 2
     fa6:	48 f4       	brcc	.+18     	; 0xfba <__pack_f+0x2e>
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	a0 e1       	ldi	r26, 0x10	; 16
     fae:	b0 e0       	ldi	r27, 0x00	; 0
     fb0:	e8 2a       	or	r14, r24
     fb2:	f9 2a       	or	r15, r25
     fb4:	0a 2b       	or	r16, r26
     fb6:	1b 2b       	or	r17, r27
     fb8:	a5 c0       	rjmp	.+330    	; 0x1104 <__pack_f+0x178>
     fba:	84 30       	cpi	r24, 0x04	; 4
     fbc:	09 f4       	brne	.+2      	; 0xfc0 <__pack_f+0x34>
     fbe:	9f c0       	rjmp	.+318    	; 0x10fe <__pack_f+0x172>
     fc0:	82 30       	cpi	r24, 0x02	; 2
     fc2:	21 f4       	brne	.+8      	; 0xfcc <__pack_f+0x40>
     fc4:	ee 24       	eor	r14, r14
     fc6:	ff 24       	eor	r15, r15
     fc8:	87 01       	movw	r16, r14
     fca:	05 c0       	rjmp	.+10     	; 0xfd6 <__pack_f+0x4a>
     fcc:	e1 14       	cp	r14, r1
     fce:	f1 04       	cpc	r15, r1
     fd0:	01 05       	cpc	r16, r1
     fd2:	11 05       	cpc	r17, r1
     fd4:	19 f4       	brne	.+6      	; 0xfdc <__pack_f+0x50>
     fd6:	e0 e0       	ldi	r30, 0x00	; 0
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	96 c0       	rjmp	.+300    	; 0x1108 <__pack_f+0x17c>
     fdc:	62 81       	ldd	r22, Z+2	; 0x02
     fde:	73 81       	ldd	r23, Z+3	; 0x03
     fe0:	9f ef       	ldi	r25, 0xFF	; 255
     fe2:	62 38       	cpi	r22, 0x82	; 130
     fe4:	79 07       	cpc	r23, r25
     fe6:	0c f0       	brlt	.+2      	; 0xfea <__pack_f+0x5e>
     fe8:	5b c0       	rjmp	.+182    	; 0x10a0 <__pack_f+0x114>
     fea:	22 e8       	ldi	r18, 0x82	; 130
     fec:	3f ef       	ldi	r19, 0xFF	; 255
     fee:	26 1b       	sub	r18, r22
     ff0:	37 0b       	sbc	r19, r23
     ff2:	2a 31       	cpi	r18, 0x1A	; 26
     ff4:	31 05       	cpc	r19, r1
     ff6:	2c f0       	brlt	.+10     	; 0x1002 <__pack_f+0x76>
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	40 e0       	ldi	r20, 0x00	; 0
     ffe:	50 e0       	ldi	r21, 0x00	; 0
    1000:	2a c0       	rjmp	.+84     	; 0x1056 <__pack_f+0xca>
    1002:	b8 01       	movw	r22, r16
    1004:	a7 01       	movw	r20, r14
    1006:	02 2e       	mov	r0, r18
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <__pack_f+0x86>
    100a:	76 95       	lsr	r23
    100c:	67 95       	ror	r22
    100e:	57 95       	ror	r21
    1010:	47 95       	ror	r20
    1012:	0a 94       	dec	r0
    1014:	d2 f7       	brpl	.-12     	; 0x100a <__pack_f+0x7e>
    1016:	81 e0       	ldi	r24, 0x01	; 1
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	a0 e0       	ldi	r26, 0x00	; 0
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	04 c0       	rjmp	.+8      	; 0x1028 <__pack_f+0x9c>
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	aa 1f       	adc	r26, r26
    1026:	bb 1f       	adc	r27, r27
    1028:	2a 95       	dec	r18
    102a:	d2 f7       	brpl	.-12     	; 0x1020 <__pack_f+0x94>
    102c:	01 97       	sbiw	r24, 0x01	; 1
    102e:	a1 09       	sbc	r26, r1
    1030:	b1 09       	sbc	r27, r1
    1032:	8e 21       	and	r24, r14
    1034:	9f 21       	and	r25, r15
    1036:	a0 23       	and	r26, r16
    1038:	b1 23       	and	r27, r17
    103a:	00 97       	sbiw	r24, 0x00	; 0
    103c:	a1 05       	cpc	r26, r1
    103e:	b1 05       	cpc	r27, r1
    1040:	21 f0       	breq	.+8      	; 0x104a <__pack_f+0xbe>
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	9a 01       	movw	r18, r20
    104c:	ab 01       	movw	r20, r22
    104e:	28 2b       	or	r18, r24
    1050:	39 2b       	or	r19, r25
    1052:	4a 2b       	or	r20, r26
    1054:	5b 2b       	or	r21, r27
    1056:	da 01       	movw	r26, r20
    1058:	c9 01       	movw	r24, r18
    105a:	8f 77       	andi	r24, 0x7F	; 127
    105c:	90 70       	andi	r25, 0x00	; 0
    105e:	a0 70       	andi	r26, 0x00	; 0
    1060:	b0 70       	andi	r27, 0x00	; 0
    1062:	80 34       	cpi	r24, 0x40	; 64
    1064:	91 05       	cpc	r25, r1
    1066:	a1 05       	cpc	r26, r1
    1068:	b1 05       	cpc	r27, r1
    106a:	39 f4       	brne	.+14     	; 0x107a <__pack_f+0xee>
    106c:	27 ff       	sbrs	r18, 7
    106e:	09 c0       	rjmp	.+18     	; 0x1082 <__pack_f+0xf6>
    1070:	20 5c       	subi	r18, 0xC0	; 192
    1072:	3f 4f       	sbci	r19, 0xFF	; 255
    1074:	4f 4f       	sbci	r20, 0xFF	; 255
    1076:	5f 4f       	sbci	r21, 0xFF	; 255
    1078:	04 c0       	rjmp	.+8      	; 0x1082 <__pack_f+0xf6>
    107a:	21 5c       	subi	r18, 0xC1	; 193
    107c:	3f 4f       	sbci	r19, 0xFF	; 255
    107e:	4f 4f       	sbci	r20, 0xFF	; 255
    1080:	5f 4f       	sbci	r21, 0xFF	; 255
    1082:	e0 e0       	ldi	r30, 0x00	; 0
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	20 30       	cpi	r18, 0x00	; 0
    1088:	a0 e0       	ldi	r26, 0x00	; 0
    108a:	3a 07       	cpc	r19, r26
    108c:	a0 e0       	ldi	r26, 0x00	; 0
    108e:	4a 07       	cpc	r20, r26
    1090:	a0 e4       	ldi	r26, 0x40	; 64
    1092:	5a 07       	cpc	r21, r26
    1094:	10 f0       	brcs	.+4      	; 0x109a <__pack_f+0x10e>
    1096:	e1 e0       	ldi	r30, 0x01	; 1
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	79 01       	movw	r14, r18
    109c:	8a 01       	movw	r16, r20
    109e:	27 c0       	rjmp	.+78     	; 0x10ee <__pack_f+0x162>
    10a0:	60 38       	cpi	r22, 0x80	; 128
    10a2:	71 05       	cpc	r23, r1
    10a4:	64 f5       	brge	.+88     	; 0x10fe <__pack_f+0x172>
    10a6:	fb 01       	movw	r30, r22
    10a8:	e1 58       	subi	r30, 0x81	; 129
    10aa:	ff 4f       	sbci	r31, 0xFF	; 255
    10ac:	d8 01       	movw	r26, r16
    10ae:	c7 01       	movw	r24, r14
    10b0:	8f 77       	andi	r24, 0x7F	; 127
    10b2:	90 70       	andi	r25, 0x00	; 0
    10b4:	a0 70       	andi	r26, 0x00	; 0
    10b6:	b0 70       	andi	r27, 0x00	; 0
    10b8:	80 34       	cpi	r24, 0x40	; 64
    10ba:	91 05       	cpc	r25, r1
    10bc:	a1 05       	cpc	r26, r1
    10be:	b1 05       	cpc	r27, r1
    10c0:	39 f4       	brne	.+14     	; 0x10d0 <__pack_f+0x144>
    10c2:	e7 fe       	sbrs	r14, 7
    10c4:	0d c0       	rjmp	.+26     	; 0x10e0 <__pack_f+0x154>
    10c6:	80 e4       	ldi	r24, 0x40	; 64
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	a0 e0       	ldi	r26, 0x00	; 0
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <__pack_f+0x14c>
    10d0:	8f e3       	ldi	r24, 0x3F	; 63
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	a0 e0       	ldi	r26, 0x00	; 0
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	e8 0e       	add	r14, r24
    10da:	f9 1e       	adc	r15, r25
    10dc:	0a 1f       	adc	r16, r26
    10de:	1b 1f       	adc	r17, r27
    10e0:	17 ff       	sbrs	r17, 7
    10e2:	05 c0       	rjmp	.+10     	; 0x10ee <__pack_f+0x162>
    10e4:	16 95       	lsr	r17
    10e6:	07 95       	ror	r16
    10e8:	f7 94       	ror	r15
    10ea:	e7 94       	ror	r14
    10ec:	31 96       	adiw	r30, 0x01	; 1
    10ee:	87 e0       	ldi	r24, 0x07	; 7
    10f0:	16 95       	lsr	r17
    10f2:	07 95       	ror	r16
    10f4:	f7 94       	ror	r15
    10f6:	e7 94       	ror	r14
    10f8:	8a 95       	dec	r24
    10fa:	d1 f7       	brne	.-12     	; 0x10f0 <__pack_f+0x164>
    10fc:	05 c0       	rjmp	.+10     	; 0x1108 <__pack_f+0x17c>
    10fe:	ee 24       	eor	r14, r14
    1100:	ff 24       	eor	r15, r15
    1102:	87 01       	movw	r16, r14
    1104:	ef ef       	ldi	r30, 0xFF	; 255
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	6e 2f       	mov	r22, r30
    110a:	67 95       	ror	r22
    110c:	66 27       	eor	r22, r22
    110e:	67 95       	ror	r22
    1110:	90 2f       	mov	r25, r16
    1112:	9f 77       	andi	r25, 0x7F	; 127
    1114:	d7 94       	ror	r13
    1116:	dd 24       	eor	r13, r13
    1118:	d7 94       	ror	r13
    111a:	8e 2f       	mov	r24, r30
    111c:	86 95       	lsr	r24
    111e:	49 2f       	mov	r20, r25
    1120:	46 2b       	or	r20, r22
    1122:	58 2f       	mov	r21, r24
    1124:	5d 29       	or	r21, r13
    1126:	b7 01       	movw	r22, r14
    1128:	ca 01       	movw	r24, r20
    112a:	1f 91       	pop	r17
    112c:	0f 91       	pop	r16
    112e:	ff 90       	pop	r15
    1130:	ef 90       	pop	r14
    1132:	df 90       	pop	r13
    1134:	08 95       	ret

00001136 <__unpack_f>:
    1136:	fc 01       	movw	r30, r24
    1138:	db 01       	movw	r26, r22
    113a:	40 81       	ld	r20, Z
    113c:	51 81       	ldd	r21, Z+1	; 0x01
    113e:	22 81       	ldd	r18, Z+2	; 0x02
    1140:	62 2f       	mov	r22, r18
    1142:	6f 77       	andi	r22, 0x7F	; 127
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	22 1f       	adc	r18, r18
    1148:	22 27       	eor	r18, r18
    114a:	22 1f       	adc	r18, r18
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	89 2f       	mov	r24, r25
    1150:	88 0f       	add	r24, r24
    1152:	82 2b       	or	r24, r18
    1154:	28 2f       	mov	r18, r24
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	99 1f       	adc	r25, r25
    115a:	99 27       	eor	r25, r25
    115c:	99 1f       	adc	r25, r25
    115e:	11 96       	adiw	r26, 0x01	; 1
    1160:	9c 93       	st	X, r25
    1162:	11 97       	sbiw	r26, 0x01	; 1
    1164:	21 15       	cp	r18, r1
    1166:	31 05       	cpc	r19, r1
    1168:	a9 f5       	brne	.+106    	; 0x11d4 <__unpack_f+0x9e>
    116a:	41 15       	cp	r20, r1
    116c:	51 05       	cpc	r21, r1
    116e:	61 05       	cpc	r22, r1
    1170:	71 05       	cpc	r23, r1
    1172:	11 f4       	brne	.+4      	; 0x1178 <__unpack_f+0x42>
    1174:	82 e0       	ldi	r24, 0x02	; 2
    1176:	37 c0       	rjmp	.+110    	; 0x11e6 <__unpack_f+0xb0>
    1178:	82 e8       	ldi	r24, 0x82	; 130
    117a:	9f ef       	ldi	r25, 0xFF	; 255
    117c:	13 96       	adiw	r26, 0x03	; 3
    117e:	9c 93       	st	X, r25
    1180:	8e 93       	st	-X, r24
    1182:	12 97       	sbiw	r26, 0x02	; 2
    1184:	9a 01       	movw	r18, r20
    1186:	ab 01       	movw	r20, r22
    1188:	67 e0       	ldi	r22, 0x07	; 7
    118a:	22 0f       	add	r18, r18
    118c:	33 1f       	adc	r19, r19
    118e:	44 1f       	adc	r20, r20
    1190:	55 1f       	adc	r21, r21
    1192:	6a 95       	dec	r22
    1194:	d1 f7       	brne	.-12     	; 0x118a <__unpack_f+0x54>
    1196:	83 e0       	ldi	r24, 0x03	; 3
    1198:	8c 93       	st	X, r24
    119a:	0d c0       	rjmp	.+26     	; 0x11b6 <__unpack_f+0x80>
    119c:	22 0f       	add	r18, r18
    119e:	33 1f       	adc	r19, r19
    11a0:	44 1f       	adc	r20, r20
    11a2:	55 1f       	adc	r21, r21
    11a4:	12 96       	adiw	r26, 0x02	; 2
    11a6:	8d 91       	ld	r24, X+
    11a8:	9c 91       	ld	r25, X
    11aa:	13 97       	sbiw	r26, 0x03	; 3
    11ac:	01 97       	sbiw	r24, 0x01	; 1
    11ae:	13 96       	adiw	r26, 0x03	; 3
    11b0:	9c 93       	st	X, r25
    11b2:	8e 93       	st	-X, r24
    11b4:	12 97       	sbiw	r26, 0x02	; 2
    11b6:	20 30       	cpi	r18, 0x00	; 0
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	38 07       	cpc	r19, r24
    11bc:	80 e0       	ldi	r24, 0x00	; 0
    11be:	48 07       	cpc	r20, r24
    11c0:	80 e4       	ldi	r24, 0x40	; 64
    11c2:	58 07       	cpc	r21, r24
    11c4:	58 f3       	brcs	.-42     	; 0x119c <__unpack_f+0x66>
    11c6:	14 96       	adiw	r26, 0x04	; 4
    11c8:	2d 93       	st	X+, r18
    11ca:	3d 93       	st	X+, r19
    11cc:	4d 93       	st	X+, r20
    11ce:	5c 93       	st	X, r21
    11d0:	17 97       	sbiw	r26, 0x07	; 7
    11d2:	08 95       	ret
    11d4:	2f 3f       	cpi	r18, 0xFF	; 255
    11d6:	31 05       	cpc	r19, r1
    11d8:	79 f4       	brne	.+30     	; 0x11f8 <__unpack_f+0xc2>
    11da:	41 15       	cp	r20, r1
    11dc:	51 05       	cpc	r21, r1
    11de:	61 05       	cpc	r22, r1
    11e0:	71 05       	cpc	r23, r1
    11e2:	19 f4       	brne	.+6      	; 0x11ea <__unpack_f+0xb4>
    11e4:	84 e0       	ldi	r24, 0x04	; 4
    11e6:	8c 93       	st	X, r24
    11e8:	08 95       	ret
    11ea:	64 ff       	sbrs	r22, 4
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <__unpack_f+0xbe>
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	8c 93       	st	X, r24
    11f2:	12 c0       	rjmp	.+36     	; 0x1218 <__unpack_f+0xe2>
    11f4:	1c 92       	st	X, r1
    11f6:	10 c0       	rjmp	.+32     	; 0x1218 <__unpack_f+0xe2>
    11f8:	2f 57       	subi	r18, 0x7F	; 127
    11fa:	30 40       	sbci	r19, 0x00	; 0
    11fc:	13 96       	adiw	r26, 0x03	; 3
    11fe:	3c 93       	st	X, r19
    1200:	2e 93       	st	-X, r18
    1202:	12 97       	sbiw	r26, 0x02	; 2
    1204:	83 e0       	ldi	r24, 0x03	; 3
    1206:	8c 93       	st	X, r24
    1208:	87 e0       	ldi	r24, 0x07	; 7
    120a:	44 0f       	add	r20, r20
    120c:	55 1f       	adc	r21, r21
    120e:	66 1f       	adc	r22, r22
    1210:	77 1f       	adc	r23, r23
    1212:	8a 95       	dec	r24
    1214:	d1 f7       	brne	.-12     	; 0x120a <__unpack_f+0xd4>
    1216:	70 64       	ori	r23, 0x40	; 64
    1218:	14 96       	adiw	r26, 0x04	; 4
    121a:	4d 93       	st	X+, r20
    121c:	5d 93       	st	X+, r21
    121e:	6d 93       	st	X+, r22
    1220:	7c 93       	st	X, r23
    1222:	17 97       	sbiw	r26, 0x07	; 7
    1224:	08 95       	ret

00001226 <__fpcmp_parts_f>:
    1226:	1f 93       	push	r17
    1228:	dc 01       	movw	r26, r24
    122a:	fb 01       	movw	r30, r22
    122c:	9c 91       	ld	r25, X
    122e:	92 30       	cpi	r25, 0x02	; 2
    1230:	08 f4       	brcc	.+2      	; 0x1234 <__fpcmp_parts_f+0xe>
    1232:	47 c0       	rjmp	.+142    	; 0x12c2 <__fpcmp_parts_f+0x9c>
    1234:	80 81       	ld	r24, Z
    1236:	82 30       	cpi	r24, 0x02	; 2
    1238:	08 f4       	brcc	.+2      	; 0x123c <__fpcmp_parts_f+0x16>
    123a:	43 c0       	rjmp	.+134    	; 0x12c2 <__fpcmp_parts_f+0x9c>
    123c:	94 30       	cpi	r25, 0x04	; 4
    123e:	51 f4       	brne	.+20     	; 0x1254 <__fpcmp_parts_f+0x2e>
    1240:	11 96       	adiw	r26, 0x01	; 1
    1242:	1c 91       	ld	r17, X
    1244:	84 30       	cpi	r24, 0x04	; 4
    1246:	99 f5       	brne	.+102    	; 0x12ae <__fpcmp_parts_f+0x88>
    1248:	81 81       	ldd	r24, Z+1	; 0x01
    124a:	68 2f       	mov	r22, r24
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	61 1b       	sub	r22, r17
    1250:	71 09       	sbc	r23, r1
    1252:	3f c0       	rjmp	.+126    	; 0x12d2 <__fpcmp_parts_f+0xac>
    1254:	84 30       	cpi	r24, 0x04	; 4
    1256:	21 f0       	breq	.+8      	; 0x1260 <__fpcmp_parts_f+0x3a>
    1258:	92 30       	cpi	r25, 0x02	; 2
    125a:	31 f4       	brne	.+12     	; 0x1268 <__fpcmp_parts_f+0x42>
    125c:	82 30       	cpi	r24, 0x02	; 2
    125e:	b9 f1       	breq	.+110    	; 0x12ce <__fpcmp_parts_f+0xa8>
    1260:	81 81       	ldd	r24, Z+1	; 0x01
    1262:	88 23       	and	r24, r24
    1264:	89 f1       	breq	.+98     	; 0x12c8 <__fpcmp_parts_f+0xa2>
    1266:	2d c0       	rjmp	.+90     	; 0x12c2 <__fpcmp_parts_f+0x9c>
    1268:	11 96       	adiw	r26, 0x01	; 1
    126a:	1c 91       	ld	r17, X
    126c:	11 97       	sbiw	r26, 0x01	; 1
    126e:	82 30       	cpi	r24, 0x02	; 2
    1270:	f1 f0       	breq	.+60     	; 0x12ae <__fpcmp_parts_f+0x88>
    1272:	81 81       	ldd	r24, Z+1	; 0x01
    1274:	18 17       	cp	r17, r24
    1276:	d9 f4       	brne	.+54     	; 0x12ae <__fpcmp_parts_f+0x88>
    1278:	12 96       	adiw	r26, 0x02	; 2
    127a:	2d 91       	ld	r18, X+
    127c:	3c 91       	ld	r19, X
    127e:	13 97       	sbiw	r26, 0x03	; 3
    1280:	82 81       	ldd	r24, Z+2	; 0x02
    1282:	93 81       	ldd	r25, Z+3	; 0x03
    1284:	82 17       	cp	r24, r18
    1286:	93 07       	cpc	r25, r19
    1288:	94 f0       	brlt	.+36     	; 0x12ae <__fpcmp_parts_f+0x88>
    128a:	28 17       	cp	r18, r24
    128c:	39 07       	cpc	r19, r25
    128e:	bc f0       	brlt	.+46     	; 0x12be <__fpcmp_parts_f+0x98>
    1290:	14 96       	adiw	r26, 0x04	; 4
    1292:	8d 91       	ld	r24, X+
    1294:	9d 91       	ld	r25, X+
    1296:	0d 90       	ld	r0, X+
    1298:	bc 91       	ld	r27, X
    129a:	a0 2d       	mov	r26, r0
    129c:	24 81       	ldd	r18, Z+4	; 0x04
    129e:	35 81       	ldd	r19, Z+5	; 0x05
    12a0:	46 81       	ldd	r20, Z+6	; 0x06
    12a2:	57 81       	ldd	r21, Z+7	; 0x07
    12a4:	28 17       	cp	r18, r24
    12a6:	39 07       	cpc	r19, r25
    12a8:	4a 07       	cpc	r20, r26
    12aa:	5b 07       	cpc	r21, r27
    12ac:	18 f4       	brcc	.+6      	; 0x12b4 <__fpcmp_parts_f+0x8e>
    12ae:	11 23       	and	r17, r17
    12b0:	41 f0       	breq	.+16     	; 0x12c2 <__fpcmp_parts_f+0x9c>
    12b2:	0a c0       	rjmp	.+20     	; 0x12c8 <__fpcmp_parts_f+0xa2>
    12b4:	82 17       	cp	r24, r18
    12b6:	93 07       	cpc	r25, r19
    12b8:	a4 07       	cpc	r26, r20
    12ba:	b5 07       	cpc	r27, r21
    12bc:	40 f4       	brcc	.+16     	; 0x12ce <__fpcmp_parts_f+0xa8>
    12be:	11 23       	and	r17, r17
    12c0:	19 f0       	breq	.+6      	; 0x12c8 <__fpcmp_parts_f+0xa2>
    12c2:	61 e0       	ldi	r22, 0x01	; 1
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	05 c0       	rjmp	.+10     	; 0x12d2 <__fpcmp_parts_f+0xac>
    12c8:	6f ef       	ldi	r22, 0xFF	; 255
    12ca:	7f ef       	ldi	r23, 0xFF	; 255
    12cc:	02 c0       	rjmp	.+4      	; 0x12d2 <__fpcmp_parts_f+0xac>
    12ce:	60 e0       	ldi	r22, 0x00	; 0
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	cb 01       	movw	r24, r22
    12d4:	1f 91       	pop	r17
    12d6:	08 95       	ret

000012d8 <__prologue_saves__>:
    12d8:	2f 92       	push	r2
    12da:	3f 92       	push	r3
    12dc:	4f 92       	push	r4
    12de:	5f 92       	push	r5
    12e0:	6f 92       	push	r6
    12e2:	7f 92       	push	r7
    12e4:	8f 92       	push	r8
    12e6:	9f 92       	push	r9
    12e8:	af 92       	push	r10
    12ea:	bf 92       	push	r11
    12ec:	cf 92       	push	r12
    12ee:	df 92       	push	r13
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	0f 93       	push	r16
    12f6:	1f 93       	push	r17
    12f8:	cf 93       	push	r28
    12fa:	df 93       	push	r29
    12fc:	cd b7       	in	r28, 0x3d	; 61
    12fe:	de b7       	in	r29, 0x3e	; 62
    1300:	ca 1b       	sub	r28, r26
    1302:	db 0b       	sbc	r29, r27
    1304:	0f b6       	in	r0, 0x3f	; 63
    1306:	f8 94       	cli
    1308:	de bf       	out	0x3e, r29	; 62
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	cd bf       	out	0x3d, r28	; 61
    130e:	09 94       	ijmp

00001310 <__epilogue_restores__>:
    1310:	2a 88       	ldd	r2, Y+18	; 0x12
    1312:	39 88       	ldd	r3, Y+17	; 0x11
    1314:	48 88       	ldd	r4, Y+16	; 0x10
    1316:	5f 84       	ldd	r5, Y+15	; 0x0f
    1318:	6e 84       	ldd	r6, Y+14	; 0x0e
    131a:	7d 84       	ldd	r7, Y+13	; 0x0d
    131c:	8c 84       	ldd	r8, Y+12	; 0x0c
    131e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1320:	aa 84       	ldd	r10, Y+10	; 0x0a
    1322:	b9 84       	ldd	r11, Y+9	; 0x09
    1324:	c8 84       	ldd	r12, Y+8	; 0x08
    1326:	df 80       	ldd	r13, Y+7	; 0x07
    1328:	ee 80       	ldd	r14, Y+6	; 0x06
    132a:	fd 80       	ldd	r15, Y+5	; 0x05
    132c:	0c 81       	ldd	r16, Y+4	; 0x04
    132e:	1b 81       	ldd	r17, Y+3	; 0x03
    1330:	aa 81       	ldd	r26, Y+2	; 0x02
    1332:	b9 81       	ldd	r27, Y+1	; 0x01
    1334:	ce 0f       	add	r28, r30
    1336:	d1 1d       	adc	r29, r1
    1338:	0f b6       	in	r0, 0x3f	; 63
    133a:	f8 94       	cli
    133c:	de bf       	out	0x3e, r29	; 62
    133e:	0f be       	out	0x3f, r0	; 63
    1340:	cd bf       	out	0x3d, r28	; 61
    1342:	ed 01       	movw	r28, r26
    1344:	08 95       	ret

00001346 <_exit>:
    1346:	f8 94       	cli

00001348 <__stop_program>:
    1348:	ff cf       	rjmp	.-2      	; 0x1348 <__stop_program>
